<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.rd.rd04.mapper.RD04Mapper">
	
	<select id="selectRcvpayCount" resultType="int">
		SELECT
			COUNT(*)
			FROM
			(
		SELECT 
	 		* 
			FROM
			(
				SELECT CLOSE_YM
					 , WH_CD
					 , CO_CD
					 , PRDT_CD
					 , PRDT_DIV
					 , OWNER_CD
					 , TYP_CD
					 , MAKR_CD
					 , CLNT_CD
					 , IMP_YN
					 <if test='pjShowYn != null and pjShowYn.equals("Y")'>
					 , PRJCT_CD
					 </if>
				--	 , PRDT_SIZE
					 , PRDT_SPEC
				--	 , PRDT_LEN
					 , PRDT_NM
					 , FN_CM05M01_CD_TO_NM(PRDT_DIV) PRDT_DIV_NM
					 , FN_CM05M01_CD_TO_NM(WH_CD) WH_NM
					 , FN_CM05M01_CD_TO_NM(OWNER_CD) OWNER_NM
					 , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.CLNT_CD) AS CLNT_NM
					 , FN_CM05M01_CD_TO_NM(TYP_CD) TYP_NM
					 , FN_CM05M01_CD_TO_NM(MAKR_CD) MAKR_NM
					 <if test='pjShowYn != null and pjShowYn.equals("Y")'>
					 , (SELECT PRJCT_NM FROM TB_SD05M01 WHERE PRJCT_CD = T.PRJCT_CD) AS PRJCT_NM
					 </if>
					 , SUM(NVL(BFR_STOCK_QTY, 0)) BFR_STOCK_QTY
					 , SUM(NVL(SELPCH1_QTY, 0))   SELPCH1_QTY
					 , SUM(NVL(SELPCH2_QTY, 0))   SELPCH2_QTY
					 , SUM(NVL(OUT_MOVE_QTY, 0))  OUT_MOVE_QTY
					 , SUM(NVL(IN_MOVE_QTY, 0))   IN_MOVE_QTY
					 , SUM(CASE WHEN CLOSE_YM = TO_CHAR(SYSDATE, 'YYYYMM') THEN NVL(BFR_STOCK_QTY, 0) + NVL(SELPCH1_QTY, 0) - NVL(SELPCH2_QTY, 0)+ NVL(IN_MOVE_QTY, 0) - NVL(OUT_MOVE_QTY, 0)
					 		ELSE NVL(STOCK_QTY, 0) END) STOCK_QTY
				FROM(
					SELECT REPLACE(#{closeYm}, '-', '')	 AS CLOSE_YM
						 , SM01.WH_CD
						 , SM01.CO_CD
						 , SM01.PRDT_CD
						 , BM01.PRDT_DIV
						 , SM01.OWNER_CD
						 , SM01.TYP_CD
						 , SM01.MAKR_CD
						 , SM01.CLNT_CD
						 , SM01.IMP_YN
						 , SM01.PRJCT_CD
						 , SM01.PRDT_SIZE
						 , SM01.PRDT_SPEC
						 , SM01.PRDT_LEN
						 , BM01.PRDT_NM
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),0,SM01.STOCK_QTY) AS BFR_STOCK_QTY
						 , 0 AS  SELPCH1_QTY
						 , 0 AS  SELPCH2_QTY
						 , 0 AS  OUT_MOVE_QTY
						 , 0 AS  IN_MOVE_QTY
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),SM01.STOCK_QTY,0) AS STOCK_QTY -- 현재고
					FROM TB_SM01D01 SM01
					   	LEFT JOIN TB_BM01M01 BM01
					   	ON SM01.PRDT_CD   = BM01.PRDT_CD
					   	LEFT JOIN TB_SD05M01 SD05
					   	ON SD05.PRJCT_CD = SM01.PRJCT_CD
					   	WHERE 1=1
   		 			    AND BM01.PRDT_STOCK_CD  = 'Y' -- 재고관리 대상만 조회
   		 			    AND ( <![CDATA[ SM01.STOCK_QTY  !=  0 OR SM01.STOCK_WT !=  0 ]]> )
					  	<if test="coCd != null and !coCd.equals('')">
					  		AND SM01.CO_CD = #{coCd}			
					  	</if>
					  	<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}			
					  	</if>
						AND ( SM01.CLOSE_YM = REPLACE(#{closeYm}, '-', '')
						OR    SM01.CLOSE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(#{closeYm}, '-', ''), 'YYYYMM'), -1), 'YYYYMM'))
				UNION 
				  SELECT   SUBSTRING(AR02.TRST_DT , 0, 6) AS CLOSE_YM
						 , AR02.WH_CD
						 , AR02.CO_CD
						 , AR02.TRST_PRDT_CD AS PRDT_CD
						 , BM01.PRDT_DIV
						 , AR02.OWNER_CD
						 , AR02.TYP_CD
						 , DECODE(AR02.IMP_YN,'Y','MAKR10','MAKR09')  AS MAKR_CD
						 , DECODE(AR02.OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = AR02.TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD) AS CLNT_CD
						 , AR02.IMP_YN
						 , AR02.PRJCT_CD
						 , AR02.PRDT_SIZE
						 , AR02.PRDT_SPEC
						 , AR02.PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH1', AR02.REAL_TRST_QTY)) AS  SELPCH1_QTY
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH2', AR02.REAL_TRST_QTY)) AS  SELPCH2_QTY
						 , 0 AS  OUT_MOVE_QTY
						 , 0 AS  IN_MOVE_QTY
						 , 0 AS STOCK_QTY -- 현재고
				 FROM TB_AR02M01 AR02
					   LEFT JOIN TB_BM01M01 BM01 
					  	ON AR02.TRST_PRDT_CD   = BM01.PRDT_CD
					  	LEFT JOIN TB_SD05M01 SD05
					  	ON AR02.PRJCT_CD = SD05.PRJCT_CD
					  	WHERE 1=1
   		 			    AND BM01.PRDT_STOCK_CD  = 'Y' -- 재고관리 대상만 조회
   		 			    AND ( <![CDATA[ AR02.REAL_TRST_QTY  !=  0 OR AR02.REAL_TRST_WT !=  0 ]]> )
					  	<if test="coCd != null and !coCd.equals('')">
							AND AR02.CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
					  	AND  SUBSTRING(AR02.TRST_DT , 0, 6) = REPLACE(#{closeYm}, '-', '')
				  GROUP BY SUBSTRING(AR02.TRST_DT , 0, 6)
						 , AR02.WH_CD
						 , AR02.CO_CD
						 , AR02.TRST_PRDT_CD
						 , BM01.PRDT_DIV
						 , AR02.OWNER_CD
						 , AR02.TYP_CD
						 , DECODE(AR02.IMP_YN,'Y','MAKR10','MAKR09')
						 , DECODE(AR02.OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = AR02.TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD)
						 , AR02.IMP_YN
						 , AR02.PRJCT_CD
						 , AR02.PRDT_SIZE
						 , AR02.PRDT_SPEC
						 , AR02.PRDT_LEN
						 , BM01.PRDT_NM
				UNION
					SELECT SUBSTRING(SM02.TRST_DT,0,6) AS CLOSE_YM
 					     , SM02.OUT_WH_CD
						 , SM02.OUT_CO_CD
						 , SM02.PRDT_CD
						 , BM01.PRDT_DIV
						 , SM02.OWNER_CD
						 , SM02.TYP_CD
						 , SM02.MAKR_CD
						 , SM02.CLNT_CD AS CLNT_CD
						 , SM02.IMP_YN
						 , SM02.PRJCT_CD
						 , SM02.PRDT_SIZE
						 , SM02.PRDT_SPEC
						 , SM02.PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , 0 AS SELPCH1_QTY
						 , 0 AS SELPCH2_QTY
						 , SUM(NVL(MOVE_QTY,0)) AS OUT_MOVE_QTY
						 , 0 AS IN_MOVE_QTY
						 , 0 AS STOCK_QTY
					FROM TB_SM02M01 SM02
					 INNER JOIN  TB_BM01M01 BM01 
							ON	SM02.PRDT_CD   = BM01.PRDT_CD
					LEFT JOIN TB_SD05M01 SD05
					  		ON SM02.PRJCT_CD = SD05.PRJCT_CD
					WHERE  SUBSTRING(SM02.TRST_DT , 0, 6) = REPLACE(#{closeYm}, '-', '')
   		 			    AND ( <![CDATA[ SM02.MOVE_QTY  !=  0 OR SM02.MOVE_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
							AND SM02.OUT_CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
					GROUP BY SUBSTRING(SM02.TRST_DT,0,6) 
					      , SM02.OUT_WH_CD
						  , SM02.OUT_CO_CD
						  , SM02.PRDT_CD
						  , BM01.PRDT_DIV
						  , SM02.OWNER_CD
						  , SM02.TYP_CD
						  , SM02.MAKR_CD
						  , SM02.CLNT_CD
						  , SM02.IMP_YN
						  , SM02.PRJCT_CD
						  , SM02.PRDT_SIZE
						  , SM02.PRDT_SPEC
						  , SM02.PRDT_LEN
						  , BM01.PRDT_NM					 
				UNION 
					SELECT SUBSTRING(SM02.TRST_DT,0,6) AS CLOSE_YM
					     , SM02.IN_WH_CD
						 , SM02.IN_CO_CD
						 , SM02.IN_PRDT_CD
						 , BM01.PRDT_DIV
						 , SM02.OWNER_CD
						 , SM02.IN_TYP_CD
						 , SM02.MAKR_CD
						 , SM02.CLNT_CD
						 , SM02.IMP_YN
						 , SM02.IN_PRJCT_CD
						 , SM02.IN_PRDT_SIZE
						 , SM02.IN_PRDT_SPEC
						 , SM02.IN_PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , 0 AS SELPCH1_QTY
						 , 0 AS SELPCH2_QTY
						 , 0 AS OUT_MOVE_QTY
						 , SUM(NVL(MOVE_QTY,0)) AS IN_MOVE_QTY
						 , 0 AS STOCK_QTY
					FROM TB_SM02M01 SM02
					 INNER JOIN  TB_BM01M01 BM01 
							ON	SM02.IN_PRDT_CD   = BM01.PRDT_CD
					LEFT JOIN TB_SD05M01 SD05
					  		ON SM02.PRJCT_CD = SD05.PRJCT_CD
				   WHERE  SUBSTRING(SM02.TRST_DT,0,6) = REPLACE(#{closeYm}, '-', '')
   		 			    AND ( <![CDATA[ SM02.MOVE_QTY  !=  0 OR SM02.MOVE_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
						  	AND SM02.OUT_CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
				   GROUP BY SUBSTRING(SM02.TRST_DT,0,6) 
					      , SM02.IN_WH_CD
						  , SM02.IN_CO_CD
						  , SM02.IN_PRDT_CD
						  , BM01.PRDT_DIV
						  , SM02.OWNER_CD
						  , SM02.IN_TYP_CD
						  , SM02.MAKR_CD
						  , SM02.CLNT_CD
						  , SM02.IMP_YN
						  , SM02.IN_PRJCT_CD
						  , SM02.IN_PRDT_SIZE
						  , SM02.IN_PRDT_SPEC
						  , SM02.IN_PRDT_LEN
						  , BM01.PRDT_NM
					) T
				WHERE 1 = 1						 
						<if test="coCd != null and !coCd.equals('')">
							AND T.CO_CD = #{coCd}				
						</if>	
						<if test="closeYm != null and !closeYm.equals('')">
							AND T.CLOSE_YM = REPLACE(#{closeYm}, '-', '')				
						</if>
						<if test="prdtDiv != null and !prdtDiv.equals('')">
							AND T.PRDT_DIV = #{prdtDiv}			
						</if>
						<if test="prdtCd != null and !prdtCd.equals('')">
							AND T.PRDT_CD = #{prdtCd}				
						</if>
						<if test="prdtNm != null and !prdtNm.equals('')">
							AND T.PRDT_NM LIKE '%' || UPPER(#{prdtNm}) ||'%'
						</if>
						<if test="whCd != null and !whCd.equals('')">
							AND T.WH_CD = #{whCd}				
						</if>
						<if test="ownerCd != null and !ownerCd.equals('')">
							AND T.OWNER_CD = #{ownerCd}				
						</if>
						<if test="typCd != null and !typCd.equals('')">
							AND T.TYP_CD = #{typCd}				
						</if>
						<if test="makrCd != null and !makrCd.equals('')">
							AND T.MAKR_CD = #{makrCd}				
						</if>
						<!-- 
							<if test="clntCd != null and !clntCd.equals('')">
								AND T.CLNT_CD = #{clntCd}				
							</if>
						 -->
						<if test="taxivcCoprt_S != null and !taxivcCoprt_S.equals('')">
							AND T.CLNT_CD = (SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = #{taxivcCoprt_S})				
						</if>
						<if test="impYn != null and !impYn.equals('')">
							AND T.IMP_YN = #{impYn}				
						</if>
						<if test="prjctCd != null and !prjctCd.equals('')">
							AND T.PRJCT_CD = #{prjctCd}				
						</if>
						<if test="prdtGrp != null and !prdtGrp.equals('')">
							AND T.PRDT_DIV IN (SELECT DISTINCT PRDT_DIV
											   FROM TB_BM01M01
											   WHERE PRDT_GRP = #{prdtGrp}
										    )
						</if>
				  GROUP BY CLOSE_YM
						 , WH_CD
						 , CO_CD
						 , PRDT_CD
						 , PRDT_DIV
						 , OWNER_CD
						 , TYP_CD
						 , MAKR_CD
						 , CLNT_CD
						 , IMP_YN
						 <if test='pjShowYn != null and pjShowYn.equals("Y")'>
						 , PRJCT_CD
						 </if>
					--	 , PRDT_SIZE
						 , PRDT_SPEC
					--	 , PRDT_LEN
						 , PRDT_NM
			) A		
			WHERE 1=1
			<if test="clntNm != null and !clntNm.equals('')">
				AND A.CLNT_NM LIKE '%' || #{clntNm} || '%'				
			</if>
			
			<if test="prjctNm != null and !prjctNm.equals('')">
				AND A.PRJCT_NM LIKE '%' || #{prjctNm} || '%'				
			</if>
			AND A.STOCK_QTY != 0
			)
	</select>
	
	<select id="selectRcvpayList" resultType="CamelMap">
SELECT
			*
		FROM
		(
			SELECT
				ROWNUM AS RNUM, A.*
			FROM
			(
				SELECT CLOSE_YM
					 , WH_CD
					 , CO_CD
					 , PRDT_CD
					 , PRDT_DIV
					 , OWNER_CD
					 , TYP_CD
					 , MAKR_CD
					 , CLNT_CD
					 , IMP_YN
					 <if test='pjShowYn != null and pjShowYn.equals("Y")'>
					 , PRJCT_CD
					 </if>
				--	 , PRDT_SIZE
					 , PRDT_SPEC
				--	 , PRDT_LEN
					 , PRDT_NM
					 , FN_CM05M01_CD_TO_NM(PRDT_DIV) PRDT_DIV_NM
					 , FN_CM05M01_CD_TO_NM(WH_CD) WH_NM
					 , FN_CM05M01_CD_TO_NM(OWNER_CD) OWNER_NM
					 , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.CLNT_CD) AS CLNT_NM
					 , FN_CM05M01_CD_TO_NM(TYP_CD) TYP_NM
					 , FN_CM05M01_CD_TO_NM(MAKR_CD) MAKR_NM
					 <if test='pjShowYn != null and pjShowYn.equals("Y")'>
					 , (SELECT PRJCT_NM FROM TB_SD05M01 WHERE PRJCT_CD = T.PRJCT_CD) AS PRJCT_NM
					 </if>
					 , SUM(NVL(BFR_STOCK_QTY, 0)) BFR_STOCK_QTY
					 , SUM(NVL(SELPCH1_QTY, 0))   SELPCH1_QTY
					 , SUM(NVL(SELPCH2_QTY, 0))   SELPCH2_QTY
					 , SUM(NVL(OUT_MOVE_QTY, 0))  OUT_MOVE_QTY
					 , SUM(NVL(IN_MOVE_QTY, 0))   IN_MOVE_QTY
					 , SUM(CASE WHEN CLOSE_YM = TO_CHAR(SYSDATE, 'YYYYMM') THEN NVL(BFR_STOCK_QTY, 0) + NVL(SELPCH1_QTY, 0) - NVL(SELPCH2_QTY, 0)+ NVL(IN_MOVE_QTY, 0) - NVL(OUT_MOVE_QTY, 0)
					 		ELSE NVL(STOCK_QTY, 0) END) STOCK_QTY
				FROM(
					SELECT REPLACE(#{closeYm}, '-', '')	 AS CLOSE_YM
						 , SM01.WH_CD
						 , SM01.CO_CD
						 , SM01.PRDT_CD
						 , BM01.PRDT_DIV
						 , SM01.OWNER_CD
						 , SM01.TYP_CD
						 , SM01.MAKR_CD
						 , SM01.CLNT_CD
						 , SM01.IMP_YN
						 , SM01.PRJCT_CD
						 , SM01.PRDT_SIZE
						 , SM01.PRDT_SPEC
						 , SM01.PRDT_LEN
						 , BM01.PRDT_NM
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),0,SM01.STOCK_QTY) AS BFR_STOCK_QTY
						 , 0 AS  SELPCH1_QTY
						 , 0 AS  SELPCH2_QTY
						 , 0 AS  OUT_MOVE_QTY
						 , 0 AS  IN_MOVE_QTY
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),SM01.STOCK_QTY,0) AS STOCK_QTY -- 현재고
					FROM TB_SM01D01 SM01
					   	LEFT JOIN TB_BM01M01 BM01
					   	ON SM01.PRDT_CD   = BM01.PRDT_CD
					   	LEFT JOIN TB_SD05M01 SD05
					   	ON SD05.PRJCT_CD = SM01.PRJCT_CD
					   	WHERE 1=1
   		 			    AND BM01.PRDT_STOCK_CD  = 'Y' -- 재고관리 대상만 조회
   		 			    AND ( <![CDATA[ SM01.STOCK_QTY  !=  0 OR SM01.STOCK_WT !=  0 ]]> )
					  	<if test="coCd != null and !coCd.equals('')">
					  		AND SM01.CO_CD = #{coCd}			
					  	</if>
					  	<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}			
					  	</if>
						AND ( SM01.CLOSE_YM = REPLACE(#{closeYm}, '-', '')
						OR    SM01.CLOSE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(#{closeYm}, '-', ''), 'YYYYMM'), -1), 'YYYYMM'))
				UNION 
				  SELECT   SUBSTRING(AR02.TRST_DT , 0, 6) AS CLOSE_YM
						 , AR02.WH_CD
						 , AR02.CO_CD
						 , AR02.TRST_PRDT_CD AS PRDT_CD
						 , BM01.PRDT_DIV
						 , AR02.OWNER_CD
						 , AR02.TYP_CD
						 , DECODE(AR02.IMP_YN,'Y','MAKR10','MAKR09')  AS MAKR_CD
						 , DECODE(AR02.OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = AR02.TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD) AS CLNT_CD
						 , AR02.IMP_YN
						 , AR02.PRJCT_CD
						 , AR02.PRDT_SIZE
						 , AR02.PRDT_SPEC
						 , AR02.PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH1', AR02.REAL_TRST_QTY)) AS  SELPCH1_QTY
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH2', AR02.REAL_TRST_QTY)) AS  SELPCH2_QTY
						 , 0 AS  OUT_MOVE_QTY
						 , 0 AS  IN_MOVE_QTY
						 , 0 AS STOCK_QTY -- 현재고
				 FROM TB_AR02M01 AR02
					   LEFT JOIN TB_BM01M01 BM01 
					  	ON AR02.TRST_PRDT_CD   = BM01.PRDT_CD
					  	LEFT JOIN TB_SD05M01 SD05
					  	ON AR02.PRJCT_CD = SD05.PRJCT_CD
					  	WHERE 1=1
   		 			    AND BM01.PRDT_STOCK_CD  = 'Y' -- 재고관리 대상만 조회
   		 			    AND ( <![CDATA[ AR02.REAL_TRST_QTY  !=  0 OR AR02.REAL_TRST_WT !=  0 ]]> )
					  	<if test="coCd != null and !coCd.equals('')">
							AND AR02.CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
					  	AND  SUBSTRING(AR02.TRST_DT , 0, 6) = REPLACE(#{closeYm}, '-', '')
				  GROUP BY SUBSTRING(AR02.TRST_DT , 0, 6)
						 , AR02.WH_CD
						 , AR02.CO_CD
						 , AR02.TRST_PRDT_CD
						 , BM01.PRDT_DIV
						 , AR02.OWNER_CD
						 , AR02.TYP_CD
						 , DECODE(AR02.IMP_YN,'Y','MAKR10','MAKR09')
						 , DECODE(AR02.OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = AR02.TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD)
						 , AR02.IMP_YN
						 , AR02.PRJCT_CD
						 , AR02.PRDT_SIZE
						 , AR02.PRDT_SPEC
						 , AR02.PRDT_LEN
						 , BM01.PRDT_NM
				UNION
					SELECT SUBSTRING(SM02.TRST_DT,0,6) AS CLOSE_YM
 					     , SM02.OUT_WH_CD
						 , SM02.OUT_CO_CD
						 , SM02.PRDT_CD
						 , BM01.PRDT_DIV
						 , SM02.OWNER_CD
						 , SM02.TYP_CD
						 , SM02.MAKR_CD
						 , SM02.CLNT_CD AS CLNT_CD
						 , SM02.IMP_YN
						 , SM02.PRJCT_CD
						 , SM02.PRDT_SIZE
						 , SM02.PRDT_SPEC
						 , SM02.PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , 0 AS SELPCH1_QTY
						 , 0 AS SELPCH2_QTY
						 , SUM(NVL(MOVE_QTY,0)) AS OUT_MOVE_QTY
						 , 0 AS IN_MOVE_QTY
						 , 0 AS STOCK_QTY
					FROM TB_SM02M01 SM02
					 INNER JOIN  TB_BM01M01 BM01 
							ON	SM02.PRDT_CD   = BM01.PRDT_CD
					LEFT JOIN TB_SD05M01 SD05
					  		ON SM02.PRJCT_CD = SD05.PRJCT_CD
					WHERE  SUBSTRING(SM02.TRST_DT , 0, 6) = REPLACE(#{closeYm}, '-', '')
   		 			    AND ( <![CDATA[ SM02.MOVE_QTY  !=  0 OR SM02.MOVE_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
							AND SM02.OUT_CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
					GROUP BY SUBSTRING(SM02.TRST_DT,0,6) 
					      , SM02.OUT_WH_CD
						  , SM02.OUT_CO_CD
						  , SM02.PRDT_CD
						  , BM01.PRDT_DIV
						  , SM02.OWNER_CD
						  , SM02.TYP_CD
						  , SM02.MAKR_CD
						  , SM02.CLNT_CD
						  , SM02.IMP_YN
						  , SM02.PRJCT_CD
						  , SM02.PRDT_SIZE
						  , SM02.PRDT_SPEC
						  , SM02.PRDT_LEN
						  , BM01.PRDT_NM					 
				UNION 
					SELECT SUBSTRING(SM02.TRST_DT,0,6) AS CLOSE_YM
					     , SM02.IN_WH_CD
						 , SM02.IN_CO_CD
						 , SM02.IN_PRDT_CD
						 , BM01.PRDT_DIV
						 , SM02.OWNER_CD
						 , SM02.IN_TYP_CD
						 , SM02.MAKR_CD
						 , SM02.CLNT_CD
						 , SM02.IMP_YN
						 , SM02.IN_PRJCT_CD
						 , SM02.IN_PRDT_SIZE
						 , SM02.IN_PRDT_SPEC
						 , SM02.IN_PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , 0 AS SELPCH1_QTY
						 , 0 AS SELPCH2_QTY
						 , 0 AS OUT_MOVE_QTY
						 , SUM(NVL(MOVE_QTY,0)) AS IN_MOVE_QTY
						 , 0 AS STOCK_QTY
					FROM TB_SM02M01 SM02
					 INNER JOIN  TB_BM01M01 BM01 
							ON	SM02.IN_PRDT_CD   = BM01.PRDT_CD
					LEFT JOIN TB_SD05M01 SD05
					  		ON SM02.PRJCT_CD = SD05.PRJCT_CD
				   WHERE  SUBSTRING(SM02.TRST_DT,0,6) = REPLACE(#{closeYm}, '-', '')
   		 			    AND ( <![CDATA[ SM02.MOVE_QTY  !=  0 OR SM02.MOVE_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
						  	AND SM02.OUT_CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
				   GROUP BY SUBSTRING(SM02.TRST_DT,0,6) 
					      , SM02.IN_WH_CD
						  , SM02.IN_CO_CD
						  , SM02.IN_PRDT_CD
						  , BM01.PRDT_DIV
						  , SM02.OWNER_CD
						  , SM02.IN_TYP_CD
						  , SM02.MAKR_CD
						  , SM02.CLNT_CD
						  , SM02.IMP_YN
						  , SM02.IN_PRJCT_CD
						  , SM02.IN_PRDT_SIZE
						  , SM02.IN_PRDT_SPEC
						  , SM02.IN_PRDT_LEN
						  , BM01.PRDT_NM
					) T
				WHERE 1 = 1						 
						<if test="coCd != null and !coCd.equals('')">
							AND T.CO_CD = #{coCd}				
						</if>	
						<if test="closeYm != null and !closeYm.equals('')">
							AND T.CLOSE_YM = REPLACE(#{closeYm}, '-', '')				
						</if>
						<if test="prdtDiv != null and !prdtDiv.equals('')">
							AND T.PRDT_DIV = #{prdtDiv}			
						</if>
						<if test="prdtCd != null and !prdtCd.equals('')">
							AND T.PRDT_CD = #{prdtCd}				
						</if>
						<if test="prdtNm != null and !prdtNm.equals('')">
							AND T.PRDT_NM LIKE '%' || UPPER(#{prdtNm}) ||'%'
						</if>
						<if test="whCd != null and !whCd.equals('')">
							AND T.WH_CD = #{whCd}				
						</if>
						<if test="ownerCd != null and !ownerCd.equals('')">
							AND T.OWNER_CD = #{ownerCd}				
						</if>
						<if test="typCd != null and !typCd.equals('')">
							AND T.TYP_CD = #{typCd}				
						</if>
						<if test="makrCd != null and !makrCd.equals('')">
							AND T.MAKR_CD = #{makrCd}				
						</if>
						<!-- 
							<if test="clntCd != null and !clntCd.equals('')">
								AND T.CLNT_CD = #{clntCd}				
							</if>
						 -->
						<if test="taxivcCoprt_S != null and !taxivcCoprt_S.equals('')">
							AND T.CLNT_CD = (SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = #{taxivcCoprt_S})				
						</if>
						<if test="impYn != null and !impYn.equals('')">
							AND T.IMP_YN = #{impYn}				
						</if>
						<if test="prjctCd != null and !prjctCd.equals('')">
							AND T.PRJCT_CD = #{prjctCd}				
						</if>
						<if test="prdtGrp != null and !prdtGrp.equals('')">
							AND T.PRDT_DIV IN (SELECT DISTINCT PRDT_DIV
											   FROM TB_BM01M01
											   WHERE PRDT_GRP = #{prdtGrp}
										    )
						</if>
				  GROUP BY CLOSE_YM
						 , WH_CD
						 , CO_CD
						 , PRDT_CD
						 , PRDT_DIV
						 , OWNER_CD
						 , TYP_CD
						 , MAKR_CD
						 , CLNT_CD
						 , IMP_YN
						 <if test='pjShowYn != null and pjShowYn.equals("Y")'>
						 , PRJCT_CD
						 </if>
					--	 , PRDT_SIZE
						 , PRDT_SPEC
					--	 , PRDT_LEN
						 , PRDT_NM
			) A		
			WHERE 1=1
			<if test="clntNm != null and !clntNm.equals('')">
				AND A.CLNT_NM LIKE '%' || #{clntNm} || '%'				
			</if>
			
			<if test="prjctNm != null and !prjctNm.equals('')">
				AND A.PRJCT_NM LIKE '%' || #{prjctNm} || '%'				
			</if>
			AND A.STOCK_QTY != 0
		)
		WHERE
				RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>
	
	<select id="selectRcvpayListBackUp" resultType="CamelMap">
		SELECT
			*
		FROM
		(
			SELECT
				ROWNUM AS RNUM, A.*
			FROM
			(
				SELECT CLOSE_YM
					 , WH_CD
					 , CO_CD
					 , PRDT_CD
					 , PRDT_DIV
					 , OWNER_CD
					 , TYP_CD
					 , MAKR_CD
					 , CLNT_CD
					 , IMP_YN
					 , PRJCT_CD
				--	 , PRDT_SIZE
					 , PRDT_SPEC
				--	 , PRDT_LEN
					 , PRDT_NM
					 , FN_CM05M01_CD_TO_NM(PRDT_DIV) PRDT_DIV_NM
					 , FN_CM05M01_CD_TO_NM(WH_CD) WH_NM
					 , FN_CM05M01_CD_TO_NM(OWNER_CD) OWNER_NM
					 , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.CLNT_CD) AS CLNT_NM
					 , FN_CM05M01_CD_TO_NM(TYP_CD) TYP_NM
					 , FN_CM05M01_CD_TO_NM(MAKR_CD) MAKR_NM
					 , (SELECT PRJCT_NM FROM TB_SD05M01 WHERE PRJCT_CD = T.PRJCT_CD) AS PRJCT_NM
					 , SUM(NVL(BFR_STOCK_QTY, 0)) BFR_STOCK_QTY
					 , SUM(NVL(SELPCH1_QTY, 0)) SELPCH1_QTY
					 , SUM(NVL(SELPCH2_QTY, 0)) SELPCH2_QTY
					 , SUM(NVL(OUT_MOVE_QTY, 0))  OUT_MOVE_QTY
					 , SUM(NVL(IN_MOVE_QTY, 0))   IN_MOVE_QTY
					 , SUM(CASE WHEN CLOSE_YM = REPLACE(#{closeYm}, '-', '') THEN NVL(BFR_STOCK_QTY, 0) + NVL(SELPCH1_QTY, 0) - NVL(SELPCH2_QTY, 0)+ NVL(IN_MOVE_QTY, 0) - NVL(OUT_MOVE_QTY, 0)
					 		ELSE NVL(STOCK_QTY, 0) END) STOCK_QTY					 
					 , SUM(NVL(BFR_STOCK_WT, 0)) BFR_STOCK_WT
					 , SUM(NVL(SELPCH1_WT, 0)) SELPCH1_WT
					 , SUM(NVL(SELPCH2_WT, 0)) SELPCH2_WT
					 , SUM(NVL(OUT_MOVE_WT, 0))  OUT_MOVE_WT
					 , SUM(NVL(IN_MOVE_WT, 0))   IN_MOVE_WT
					 , SUM(CASE WHEN CLOSE_YM = REPLACE(#{closeYm}, '-', '') THEN NVL(BFR_STOCK_WT, 0) + NVL(SELPCH1_WT, 0) - NVL(SELPCH2_WT, 0)+ NVL(IN_MOVE_WT, 0) - NVL(OUT_MOVE_WT, 0)
					 		ELSE NVL(STOCK_WT, 0) END) STOCK_WT
				FROM(
					SELECT REPLACE(#{closeYm}, '-', '')	 AS CLOSE_YM
						 , SM01.WH_CD
						 , SM01.CO_CD
						 , SM01.PRDT_CD
						 , BM01.PRDT_DIV
						 , SM01.OWNER_CD
						 , SM01.TYP_CD
						 , SM01.MAKR_CD
						 , SM01.CLNT_CD
						 , SM01.IMP_YN
						 , SM01.PRJCT_CD
						 , SM01.PRDT_SIZE
						 , SM01.PRDT_SPEC
						 , SM01.PRDT_LEN
						 , BM01.PRDT_NM
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),0,SM01.STOCK_QTY) AS BFR_STOCK_QTY
						 , 0 AS  SELPCH1_QTY
						 , 0 AS  SELPCH2_QTY
						 , 0 AS  OUT_MOVE_QTY
						 , 0 AS  IN_MOVE_QTY
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),SM01.STOCK_QTY,0) AS STOCK_QTY -- 현재고
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),0,SM01.STOCK_WT) AS BFR_STOCK_WT
						 , 0 AS  SELPCH1_WT
						 , 0 AS  SELPCH2_WT
						 , 0 AS  OUT_MOVE_WT
						 , 0 AS  IN_MOVE_WT
						 , DECODE(SM01.CLOSE_YM,REPLACE(#{closeYm}, '-', ''),SM01.STOCK_WT,0) AS STOCK_WT -- 현재고
					FROM TB_SM01D01 SM01
					   	LEFT JOIN TB_BM01M01 BM01 
					  	ON SM01.PRDT_CD   = BM01.PRDT_CD
					  	LEFT JOIN TB_SD05M01 SD05
					  	ON SD05.PRJCT_CD = SM01.PRJCT_CD		  
   		 			    AND BM01.PRDT_STOCK_CD  = 'Y' -- 재고관리 대상만 조회
   		 			    AND ( <![CDATA[ SM01.STOCK_QTY  !=  0 OR SM01.STOCK_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
					  		AND SM01.CO_CD = #{coCd}			
					  	</if>	
					  	<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}			
					  	</if>
						AND ( SM01.CLOSE_YM = REPLACE(#{closeYm}, '-', '')
						OR    SM01.CLOSE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(#{closeYm}, '-', ''), 'YYYYMM'), -1), 'YYYYMM'))
				UNION 
				  SELECT   SUBSTRING(AR02.TRST_DT , 0, 6) AS CLOSE_YM
						 , AR02.WH_CD
						 , AR02.CO_CD
						 , AR02.TRST_PRDT_CD AS PRDT_CD
						 , BM01.PRDT_DIV
						 , AR02.OWNER_CD
						 , AR02.TYP_CD
						 , DECODE(AR02.IMP_YN,'Y','MAKR10','MAKR09')  AS MAKR_CD
						 , DECODE(AR02.OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = AR02.TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD) AS CLNT_CD
						 , AR02.IMP_YN
						 , AR02.PRJCT_CD
						 , AR02.PRDT_SIZE
						 , AR02.PRDT_SPEC
						 , AR02.PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH1', AR02.REAL_TRST_QTY)) AS  SELPCH1_QTY
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH2', AR02.REAL_TRST_QTY)) AS  SELPCH2_QTY
						 , 0 AS  OUT_MOVE_QTY
						 , 0 AS  IN_MOVE_QTY
						 , 0 AS STOCK_QTY -- 현재고
						 , 0 AS BFR_STOCK_WT
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH1', AR02.REAL_TRST_WT)) AS  SELPCH1_WT
						 , SUM(DECODE(AR02.SELPCH_CD, 'SELPCH2', AR02.REAL_TRST_WT)) AS  SELPCH2_WT
						 , 0 AS  OUT_MOVE_WT
						 , 0 AS  IN_MOVE_WT
						 , 0 AS STOCK_WT -- 현재고
				 FROM TB_AR02M01 AR02
					   	LEFT JOIN TB_BM01M01 BM01 
					  		ON AR02.TRST_PRDT_CD   = BM01.PRDT_CD
						LEFT JOIN TB_SD05M01 SD05
					  		ON AR02.PRJCT_CD = SD05.PRJCT_CD
					  	WHERE 1=1					  
   		 			    AND BM01.PRDT_STOCK_CD  = 'Y' -- 재고관리 대상만 조회
   		 			    AND ( <![CDATA[ AR02.REAL_TRST_QTY  !=  0 OR AR02.REAL_TRST_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
							AND AR02.CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
						<!-- 
						<if test="taxivcCoprt_S != null and !taxivcCoprt_S.equals('')">
							AND AR02.TAXIVC_COPRT   = #{taxivcCoprt_S}				
						</if>
						 -->
					  	AND  SUBSTRING(AR02.TRST_DT , 0, 6) = REPLACE(#{closeYm}, '-', '')
				  GROUP BY SUBSTRING(AR02.TRST_DT , 0, 6)
						 , AR02.WH_CD
						 , AR02.CO_CD
						 , AR02.TRST_PRDT_CD
						 , BM01.PRDT_DIV
						 , AR02.OWNER_CD
						 , AR02.TYP_CD
						 , DECODE(AR02.IMP_YN,'Y','MAKR10','MAKR09') 
						 , DECODE(AR02.OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = AR02.TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD)
						 , AR02.IMP_YN
						 , AR02.PRJCT_CD
						 , AR02.PRDT_SIZE
						 , AR02.PRDT_SPEC
						 , AR02.PRDT_LEN
						 , BM01.PRDT_NM
				UNION
					SELECT SUBSTRING(SM02.TRST_DT,0,6) AS CLOSE_YM
 					     , SM02.OUT_WH_CD
						 , SM02.OUT_CO_CD
						 , SM02.PRDT_CD
						 , BM01.PRDT_DIV
						 , SM02.OWNER_CD
						 , SM02.TYP_CD
						 , SM02.MAKR_CD
						 , SM02.CLNT_CD AS CLNT_CD
						 , SM02.IMP_YN
						 , SM02.PRJCT_CD
						 , SM02.PRDT_SIZE
						 , SM02.PRDT_SPEC
						 , SM02.PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , 0 AS SELPCH1_QTY
						 , 0 AS SELPCH2_QTY
						 , SUM(NVL(MOVE_QTY,0))  AS OUT_MOVE_QTY
						 , 0 AS IN_MOVE_QTY
						 , 0 AS STOCK_QTY
						 , 0 AS BFR_STOCK_WT
						 , 0 AS SELPCH1_WT
						 , 0 AS SELPCH2_WT
						 , SUM(NVL(MOVE_WT,0))  AS OUT_MOVE_WT
						 , 0 AS IN_MOVE_WT
						 , 0 AS STOCK_WT
					FROM TB_SM02M01 SM02
					 INNER JOIN  TB_BM01M01 BM01 
							ON	SM02.PRDT_CD   = BM01.PRDT_CD
					LEFT JOIN TB_SD05M01 SD05
					  		ON SM02.PRJCT_CD = SD05.PRJCT_CD
					WHERE  SUBSTRING(SM02.TRST_DT , 0, 6) = REPLACE(#{closeYm}, '-', '')
   		 			    AND ( <![CDATA[ MOVE_QTY  !=  0 OR MOVE_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
							AND SM02.OUT_CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
					GROUP BY SUBSTRING(SM02.TRST_DT,0,6) 
					      , SM02.OUT_WH_CD
						  , SM02.OUT_CO_CD
						  , SM02.PRDT_CD
						  , BM01.PRDT_DIV
						  , SM02.OWNER_CD
						  , SM02.TYP_CD
						  , SM02.MAKR_CD
						  , SM02.CLNT_CD
						  , SM02.IMP_YN
						  , SM02.PRJCT_CD
						  , SM02.PRDT_SIZE
						  , SM02.PRDT_SPEC
						  , SM02.PRDT_LEN
						  , BM01.PRDT_NM					 
				UNION 
					SELECT SUBSTRING(SM02.TRST_DT,0,6) AS CLOSE_YM
					     , SM02.IN_WH_CD
						 , SM02.IN_CO_CD
						 , SM02.IN_PRDT_CD
						 , BM01.PRDT_DIV
						 , SM02.OWNER_CD
						 , SM02.IN_TYP_CD
						 , SM02.MAKR_CD
						 , SM02.CLNT_CD
						 , SM02.IMP_YN
						 , SM02.IN_PRJCT_CD
						 , SM02.IN_PRDT_SIZE
						 , SM02.IN_PRDT_SPEC
						 , SM02.IN_PRDT_LEN
						 , BM01.PRDT_NM
						 , 0 AS BFR_STOCK_QTY
						 , 0 AS SELPCH1_QTY
						 , 0 AS SELPCH2_QTY
						 , 0 AS OUT_MOVE_QTY
						 , SUM(NVL(MOVE_QTY,0)) AS IN_MOVE_QTY
						 , 0 AS STOCK_QTY
						 , 0 AS BFR_STOCK_WT
						 , 0 AS SELPCH1_WT
						 , 0 AS SELPCH2_WT
						 , 0 AS OUT_MOVE_WT
						 , SUM(NVL(MOVE_WT,0)) AS IN_MOVE_WT
						 , 0 AS STOCK_WT
					FROM TB_SM02M01 SM02
					 INNER JOIN  TB_BM01M01 BM01 
							ON	SM02.IN_PRDT_CD   = BM01.PRDT_CD
					LEFT JOIN TB_SD05M01 SD05
					  		ON SM02.PRJCT_CD = SD05.PRJCT_CD
				   WHERE  SUBSTRING(SM02.TRST_DT,0,6) = REPLACE(#{closeYm}, '-', '')
   		 			    AND ( <![CDATA[ MOVE_QTY  !=  0 OR MOVE_WT !=  0 ]]> )  
					  	<if test="coCd != null and !coCd.equals('')">
						  	AND SM02.OUT_CO_CD   = #{coCd}				
						</if>
						<if test='tnkeyYn != null and tnkeyYn.equals("Y")'>
					  		AND SD05.TNKEY_YN = #{tnkeyYn}	
					  	</if>
				   GROUP BY SUBSTRING(SM02.TRST_DT,0,6) 
					      , SM02.IN_WH_CD
						  , SM02.IN_CO_CD
						  , SM02.IN_PRDT_CD
						  , BM01.PRDT_DIV
						  , SM02.OWNER_CD
						  , SM02.IN_TYP_CD
						  , SM02.MAKR_CD
						  , SM02.CLNT_CD
						  , SM02.IMP_YN
						  , SM02.IN_PRJCT_CD
						  , SM02.IN_PRDT_SIZE
						  , SM02.IN_PRDT_SPEC
						  , SM02.IN_PRDT_LEN
						  , BM01.PRDT_NM						 
				) T
				WHERE 1 = 1						 
						<if test="coCd != null and !coCd.equals('')">
							AND T.CO_CD = #{coCd}				
						</if>	
						<if test="closeYm != null and !closeYm.equals('')">
							AND T.CLOSE_YM = REPLACE(#{closeYm}, '-', '')				
						</if>
						<if test="prdtDiv != null and !prdtDiv.equals('')">
							AND T.PRDT_DIV = #{prdtDiv}			
						</if>
						<if test="prdtCd != null and !prdtCd.equals('')">
							AND T.PRDT_CD = #{prdtCd}				
						</if>
						<if test="prdtNm != null and !prdtNm.equals('')">
							AND T.PRDT_NM LIKE '%' || UPPER(#{prdtNm}) ||'%'
						</if>
						<if test="whCd != null and !whCd.equals('')">
							AND T.WH_CD = #{whCd}				
						</if>
						<if test="ownerCd != null and !ownerCd.equals('')">
							AND T.OWNER_CD = #{ownerCd}				
						</if>
						<if test="typCd != null and !typCd.equals('')">
							AND T.TYP_CD = #{typCd}				
						</if>
						<if test="makrCd != null and !makrCd.equals('')">
							AND T.MAKR_CD = #{makrCd}				
						</if>
						<!-- 
							<if test="clntCd != null and !clntCd.equals('')">
								AND T.CLNT_CD = #{clntCd}				
							</if>
						 -->
						<if test="taxivcCoprt_S != null and !taxivcCoprt_S.equals('')">
							AND T.CLNT_CD = (SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = #{taxivcCoprt_S})				
						</if>
						<if test="impYn != null and !impYn.equals('')">
							AND T.IMP_YN = #{impYn}				
						</if>
						<if test="prjctCd != null and !prjctCd.equals('')">
							AND T.PRJCT_CD = #{prjctCd}				
						</if>
						<if test="prdtGrp != null and !prdtGrp.equals('')">
							AND T.PRDT_DIV IN (SELECT DISTINCT PRDT_DIV
											   FROM TB_BM01M01
											   WHERE PRDT_GRP = #{prdtGrp}
										    )
						</if>
				  GROUP BY CLOSE_YM
						 , WH_CD
						 , CO_CD
						 , PRDT_CD
						 , PRDT_DIV
						 , OWNER_CD
						 , TYP_CD
						 , MAKR_CD
						 , CLNT_CD
						 , IMP_YN
						 , PRJCT_CD
					--	 , PRDT_SIZE
						 , PRDT_SPEC
					--	 , PRDT_LEN
						 , PRDT_NM
				ORDER BY  CLOSE_YM
						 , WH_CD
						 , CO_CD
						 , PRDT_DIV
						 , PRDT_SPEC
					--	 , PRDT_SIZE
						 , PRDT_CD
						 , OWNER_CD
						 , TYP_CD
						 , MAKR_CD
						 , CLNT_CD
						 , IMP_YN
						 , PRJCT_CD
					--	 , PRDT_LEN
						 , PRDT_NM
			) A		
			WHERE 1=1
			<if test="clntNm != null and !clntNm.equals('')">
				AND A.CLNT_NM LIKE '%' || #{clntNm} || '%'				
			</if>
			<if test="prjctNm != null and !prjctNm.equals('')">
				AND A.PRJCT_NM LIKE '%' || #{prjctNm} || '%'				
			</if>
		)
		WHERE
				RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>
	<select id="selectRcvpayDtlCount" resultType="int">
		SELECT 
	 		COUNT(*)
	 	  FROM TB_AR02M01
		 WHERE SUBSTRING(TRST_DT, 0, 6) = REPLACE(#{closeYm}, '-', '')
		   AND SELPCH_CD  = #{selpchCd}
	  	   AND CO_CD = #{coCd}
	  	   AND WH_CD = #{whCd}
	  	   AND TRST_PRDT_CD = #{prdtCd}
	  	   AND OWNER_CD = #{ownerCd}
	  	   AND DECODE(OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD) = #{clntCd}
	  	   AND TYP_CD = #{typCd}
<!-- 	  	   AND MAKR_CD = #{makrCd} -->
	  	   AND PRJCT_CD = #{prjctCd}
	  	   AND IMP_YN = #{impYn}
	</select>
	
	<select id="selectRcvpayDtlList" resultType="CamelMap">
		SELECT '1' TYPE1
		     , ROWNUM AS ROWCNT
		     , TO_CHAR(TO_DATE(AR02.TRST_DT, 'YYYYMMDD'), 'YYYY-MM-DD') TRST_DT
			 , AR02.TRSP_TYP_CD
			 , FN_CM05M01_CD_TO_NM(AR02.TRSP_TYP_CD) TRSP_TYP_NM
			 , AR02.PRDT_SPEC
			 , AR02.PRDT_SIZE
			 , AR02.PRDT_LEN
			 , AR02.REAL_TRST_QTY
			 , AR02.REAL_TRST_WT
		  FROM TB_AR02M01 AR02
			 INNER JOIN  TB_BM01M01 BM01 
					ON	AR02.TRST_PRDT_CD  = BM01.PRDT_CD
				   AND  BM01.PRDT_STOCK_CD = 'Y'
		 WHERE SUBSTRING(AR02.TRST_DT, 0, 6) = REPLACE(#{closeYm}, '-', '')
		   AND AR02.SELPCH_CD  = #{selpchCd}
	  	   AND AR02.CO_CD        = #{coCd}
	  	   AND AR02.WH_CD        = #{whCd}
	  	   AND AR02.TRST_PRDT_CD = #{prdtCd}
	  	   AND AR02.OWNER_CD     = #{ownerCd}
	  	   AND DECODE(AR02.OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = AR02.TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD) = #{clntCd}
	  	   AND AR02.TYP_CD       = #{typCd}
<!-- 	  	   AND AR02.MAKR_CD      = #{makrCd} -->
	  	   AND AR02.PRJCT_CD     = #{prjctCd}
	  	   AND AR02.IMP_YN       = #{impYn}
	  	 UNION
	  	 SELECT  '2' TYPE1
		        , ROWNUM AS ROWCNT
		        , TO_CHAR(TO_DATE(SM02.TRST_DT, 'YYYYMMDD'), 'YYYY-MM-DD')
	  	        , 'TRSPTYP5'
			    , FN_CM05M01_CD_TO_NM('TRSPTYP5') TRSP_TYP_NM
				, SM02.IN_PRDT_SPEC
				, SM02.IN_PRDT_SIZE
				, SM02.IN_PRDT_LEN
				, NVL(SM02.MOVE_QTY,0)  AS IN_MOVE_QTY
			    , NVL(SM02.MOVE_WT,0)   AS IN_MOVE_WT
		   FROM TB_SM02M01 SM02
			 INNER JOIN  TB_BM01M01 BM01 
					ON	SM02.IN_PRDT_CD   = BM01.PRDT_CD
		  WHERE	 SUBSTRING(SM02.TRST_DT,0,6)  = REPLACE(#{closeYm}, '-', '')
		    AND 'SELPCH1'        = #{selpchCd}
	  	    AND SM02.IN_CO_CD    = #{coCd}
	  	    AND SM02.IN_WH_CD    = #{whCd}
	  	    AND SM02.IN_PRDT_CD  = #{prdtCd}
	  	    AND SM02.OWNER_CD    = #{ownerCd}
	  	    AND SM02.CLNT_CD     = #{clntCd}
	  	    AND SM02.IN_TYP_CD   = #{typCd}
<!-- 	  	    AND SM02.MAKR_CD     = #{makrCd} -->
	  	    AND SM02.IN_PRJCT_CD = #{prjctCd}
	  	    AND SM02.IMP_YN      = #{impYn}
	  	 UNION
	  	 SELECT  '3' TYPE1
		        , ROWNUM AS ROWCNT
		        , TO_CHAR(TO_DATE(SM02.TRST_DT, 'YYYYMMDD'), 'YYYY-MM-DD')
	  	        , 'TRSPTYP5'
			    , FN_CM05M01_CD_TO_NM('TRSPTYP5') TRSP_TYP_NM
				, SM02.PRDT_SPEC
				, SM02.PRDT_SIZE
				, SM02.PRDT_LEN
				, NVL(SM02.MOVE_QTY,0) AS OUT_MOVE_QTY
			    , NVL(SM02.MOVE_WT,0)  AS OUT_MOVE_WT
		   FROM TB_SM02M01 SM02
			 INNER JOIN  TB_BM01M01 BM01 
					ON	SM02.PRDT_CD   = BM01.PRDT_CD
		  WHERE	 SUBSTRING(SM02.TRST_DT,0,6)  = REPLACE(#{closeYm}, '-', '')
		    AND 'SELPCH2'      = #{selpchCd}
	  	    AND SM02.OUT_CO_CD = #{coCd}
	  	    AND SM02.OUT_WH_CD  = #{whCd}
	  	    AND SM02.PRDT_CD   = #{prdtCd}
	  	    AND SM02.OWNER_CD  = #{ownerCd}
	  	    AND SM02.CLNT_CD   = #{clntCd}
	  	    AND SM02.TYP_CD    = #{typCd}
<!-- 	  	    AND SM02.MAKR_CD   = #{makrCd} -->
	  	    AND SM02.PRJCT_CD  = #{prjctCd}
	  	    AND SM02.IMP_YN    = #{impYn}  	
	</select>
</mapper>