<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sd.sd07.mapper.SD07Mapper">

	<select id="selectClose" resultType="CamelMap">
		SELECT 
			CO_CD,
			CLOSE_YM,
			PCHS_CLOSE_YN,
			PCHS_CLOSE_ID,
			TO_CHAR(PCHS_CLOSE_DTTM, 'YYYY-MM-DD') AS PCHS_CLOSE_DTTM,
			SELL_CLOSE_YN,
			SELL_CLOSE_ID,
			TO_CHAR(SELL_CLOSE_DTTM, 'YYYY-MM-DD') AS SELL_CLOSE_DTTM,
			ETRDPS_CLOSE_YN,
			ETRDPS_CLOSE_ID,
			TO_CHAR(ETRDPS_CLOSE_DTTM, 'YYYY-MM-DD') AS ETRDPS_CLOSE_DTTM,
			STOCK_CLOSE_YN,
			STOCK_CLOSE_ID,
			TO_CHAR(STOCK_CLOSE_DTTM, 'YYYY-MM-DD') AS STOCK_CLOSE_DTTM,
			ETC_CLOSE_YN,
			ETC_CLOSE_ID,
			TO_CHAR(ETC_CLOSE_DTTM, 'YYYY-MM-DD') AS ETC_CLOSE_DTTM,
			ETC_FIELD1,
			ETC_FIELD2,
			ETC_FIELD3,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			UDT_ID,
			UDT_PGM,
			UDT_DTTM,
			(SELECT COUNT(*) FROM TB_SM01D01 WHERE CO_CD = #{coCd} AND CLOSE_YM = #{closeYm}) AS STOCK_CLOSE_COUNT,
			(SELECT COUNT(*) FROM TB_AR07M01 WHERE CO_CD = #{coCd} AND CLOSE_YM = #{closeYm}) AS CREDIT_CLOSE_COUNT
		FROM
			TB_SD07M01
		WHERE
			CO_CD = #{coCd}
			AND CLOSE_YM = #{closeYm}
	</select>
		<select id="selectMaxCloseDay" resultType="CamelMap">
		SELECT 
			TO_CHAR(LAST_DAY(TO_DATE(MAX(DECODE(SELL_CLOSE_YN,'Y',CLOSE_YM,'')),'YYYYMM')),'YYYYMMDD')   AS MAX_SELL_CLOSE_DAY,
			TO_CHAR(LAST_DAY(TO_DATE(MAX(DECODE(PCHS_CLOSE_YN,'Y',CLOSE_YM,'')),'YYYYMM')),'YYYYMMDD')   AS MAX_PCHS_CLOSE_DAY,
			TO_CHAR(LAST_DAY(TO_DATE(MAX(DECODE(STOCK_CLOSE_YN,'Y',CLOSE_YM,'')),'YYYYMM')),'YYYYMMDD')  AS MAX_STOCK_CLOSE_DAY,
			TO_CHAR(LAST_DAY(TO_DATE(MAX(DECODE(ETRDPS_CLOSE_YN,'Y',CLOSE_YM,'')),'YYYYMM')),'YYYYMMDD') AS MAX_ETRDPS_CLOSE_DAY
		FROM
			TB_SD07M01
		WHERE
			CO_CD = #{coCd}
	</select>
	<update id="saveClose">
		MERGE INTO TB_SD07M01 A
			USING DUAL
			ON (A.CO_CD = #{coCd} AND A.CLOSE_YM = #{closeYm})
		WHEN MATCHED THEN
			UPDATE SET
				PCHS_CLOSE_YN = #{pchsCloseYn},
				PCHS_CLOSE_ID = #{userId},
				PCHS_CLOSE_DTTM = TO_DATE(#{pchsCloseDttm}, 'YYYY-MM-DD'),
				SELL_CLOSE_YN = #{sellCloseYn},
				SELL_CLOSE_ID = #{userId},
				SELL_CLOSE_DTTM = TO_DATE(#{sellCloseDttm}, 'YYYY-MM-DD'),
				ETRDPS_CLOSE_YN = #{etrdpsCloseYn},
				ETRDPS_CLOSE_ID = #{userId},
				ETRDPS_CLOSE_DTTM = TO_DATE(#{etrdpsCloseDttm}, 'YYYY-MM-DD'),
				STOCK_CLOSE_YN = #{stockCloseYn},
				STOCK_CLOSE_ID = #{userId},
				STOCK_CLOSE_DTTM = TO_DATE(#{stockCloseDttm}, 'YYYY-MM-DD'),
				UDT_ID = #{userId},
				UDT_PGM = #{pgmId},
				UDT_DTTM = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT
		(
			CO_CD,
			CLOSE_YM,
			PCHS_CLOSE_YN,
			PCHS_CLOSE_ID,
			PCHS_CLOSE_DTTM,
			SELL_CLOSE_YN,
			SELL_CLOSE_ID,
			SELL_CLOSE_DTTM,
			ETRDPS_CLOSE_YN,
			ETRDPS_CLOSE_ID,
			ETRDPS_CLOSE_DTTM,
			STOCK_CLOSE_YN,
			STOCK_CLOSE_ID,
			STOCK_CLOSE_DTTM,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			UDT_ID,
			UDT_PGM,
			UDT_DTTM
		)
		VALUES(
			#{coCd},
			#{closeYm},
			#{pchsCloseYn},
			#{userId},
			TO_DATE(#{pchsCloseDttm}, 'YYYY-MM-DD'),
			#{sellCloseYn},
			#{userId},
			TO_DATE(#{sellCloseDttm}, 'YYYY-MM-DD'),
			#{etrdpsCloseYn},
			#{userId},
			TO_DATE(#{etrdpsCloseDttm}, 'YYYY-MM-DD'),
			#{stockCloseYn},
			#{userId},
			TO_DATE(#{stockCloseDttm}, 'YYYY-MM-DD'),
			#{userId},
			#{pgmId},
			SYSDATE,
			#{userId},
			#{pgmId},
			SYSDATE
		)	
	</update>
	
	<delete id="deleteStockClose">
		DELETE
		FROM
			TB_SM01D01
		WHERE
			CO_CD = #{coCd}
			AND CLOSE_YM = #{closeYm}
	</delete>
	
	<insert id="insertStockClose">
		INSERT INTO TB_SM01D01(
			CLOSE_SEQ,
			CLOSE_YM, 
			CO_CD, 
			WH_CD, 
			PRDT_CD, 
			OWNER_CD, 
			CLNT_CD, 
			TYP_CD, 
			MAKR_CD, 
			PRJCT_CD,
			PRDT_SIZE,
            PRDT_SPEC,
            PRDT_LEN ,
			IMP_YN, 
			STOCK_WT,
			STOCK_QTY,
			STOCK_AMT,
			CREAT_ID, 
			CREAT_PGM, 
			CREAT_DTTM, 
			UDT_ID, 
			UDT_PGM, 
			UDT_DTTM,
			STOCK_UPR
		)
		SELECT
			ROWNUM AS RNUM,
			T.*,
            DECODE(STOCK_QTY,0,0,STOCK_AMT/STOCK_QTY) STOCK_UPR
		FROM
		(
			SELECT 
				CLOSE_YM,
			    CO_CD,
			    WH_CD,
			    PRDT_CD,
			    OWNER_CD,
			    CLNT_CD,
			    TYP_CD,
			    MAKR_CD,
			    PRJCT_CD,
			    PRDT_SIZE,
                PRDT_SPEC,
<!--                    길이 관리 안함. 전부 8M -->
                8 AS PRDT_LEN ,
			    IMP_YN,
			    SUM(STOCK_WT)  + SUM(REAL_TRST_WT_IN)  - SUM(REAL_TRST_WT_OUT)  AS STOCK_WT,
			    SUM(STOCK_QTY) + SUM(REAL_TRST_QTY_IN) - SUM(REAL_TRST_QTY_OUT) AS STOCK_QTY,
		        SUM(STOCK_AMT) + SUM(REAL_TRST_AMT_IN) - SUM(REAL_TRST_AMT_OUT) AS STOCK_AMT,
			    #{userId},
			    #{pgmId},
			    SYSDATE,
			    #{userId},
			    #{pgmId},
			    SYSDATE
			FROM 
			(
				SELECT
				    1 AS TYPE1,
			 		TO_CHAR(ADD_MONTHS(TO_DATE(CLOSE_YM, 'YYYYMM'), 1), 'YYYYMM') AS CLOSE_YM,
			  		CO_CD,
			  		WH_CD,
			  		PRDT_CD,
			  		OWNER_CD,
			  		CLNT_CD,
			  		TYP_CD,
			  		MAKR_CD,
			  		PRJCT_CD,
			        PRDT_SIZE,
                    PRDT_SPEC,
                    PRDT_LEN ,
			  		IMP_YN,
			  		STOCK_QTY,
			  		STOCK_WT,
			  		0 AS REAL_TRST_QTY_IN,
			  		0 AS REAL_TRST_QTY_OUT,
			  		0 AS REAL_TRST_WT_IN,
			  		0 AS REAL_TRST_WT_OUT,
		            STOCK_AMT,
		            0 AS REAL_TRST_AMT_IN,
		            0 AS REAL_TRST_AMT_OUT
			 	FROM
			  		TB_SM01D01
			 	WHERE
			 		CO_CD = #{coCd}
			 		AND CLOSE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), -1), 'YYYYMM')
			 	
			 	UNION ALL	
			 	
				SELECT  
				    2 AS TYPE1,
			   		SUBSTRING(TRST_DT,1,6) AS CLOSE_YM,
			    	CO_CD,
			    	WH_CD,
			    	TRST_PRDT_CD,
			    	OWNER_CD,
			    	DECODE(OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD),
			    	TYP_CD,
			    	DECODE(IMP_YN,'Y','MAKR10','MAKR09') AS MAKR_CD,
			    	PRJCT_CD,
			        PRDT_SIZE,
                    PRDT_SPEC,
                    PRDT_LEN ,
			    	IMP_YN,
			    	0 AS STOCK_QTY,
			    	0 AS STOCK_WT,
			    	SUM(DECODE(SELPCH_CD, 'SELPCH1', REAL_TRST_QTY, 'SELPCH3', REAL_TRST_QTY, 0)) AS REAL_TRST_QTY_IN,
			    	SUM(DECODE(SELPCH_CD, 'SELPCH2', REAL_TRST_QTY, 'SELPCH4', REAL_TRST_QTY, 0)) AS REAL_TRST_QTY_OUT,
			    	SUM(DECODE(SELPCH_CD, 'SELPCH1', REAL_TRST_WT,  'SELPCH3', REAL_TRST_WT, 0))  AS REAL_TRST_WT_IN,
			    	SUM(DECODE(SELPCH_CD, 'SELPCH2', REAL_TRST_WT,  'SELPCH4', REAL_TRST_WT, 0))  AS REAL_TRST_WT_OUT,		
		    	    0 AS STOCK_AMT,
		    	    SUM(DECODE(SELPCH_CD, 'SELPCH1', DECODE(NVL(REAL_TRST_QTY,0),0,0,REAL_TRST_AMT), 'SELPCH3', DECODE(NVL(REAL_TRST_QTY,0),0,0,REAL_TRST_AMT), 0)) AS REAL_TRST_AMT1,
		    	    SUM(DECODE(SELPCH_CD, 'SELPCH2', DECODE(NVL(REAL_TRST_QTY,0),0,0,REAL_TRST_AMT), 'SELPCH4', DECODE(NVL(REAL_TRST_QTY,0),0,0,REAL_TRST_AMT), 0)) AS REAL_TRST_AMT2
				FROM 
					TB_AR02M01
				WHERE
					CO_CD = #{coCd}
					<![CDATA[
						AND TO_DATE(TRST_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
					    AND TO_DATE(TRST_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
					]]>
			   	GROUP BY 
			   		SUBSTRING(TRST_DT,1,6),
			    	CO_CD,
			    	WH_CD,
			    	TRST_PRDT_CD,
			    	OWNER_CD,
			    	DECODE(OWNER_CD,'OWNER1',TO_NUMBER((SELECT CODE_ETC FROM TB_CM05M01 CM05 WHERE CODE_ID = TAXIVC_COPRT)),
			    	                        TRST_CLNT_CD),
			    	TYP_CD,
			    	DECODE(IMP_YN,'Y','MAKR10','MAKR09'),
			    	PRJCT_CD,
			        PRDT_SIZE,
                    PRDT_SPEC,
                    PRDT_LEN ,
			    	IMP_YN
			   UNION 	    	
			    SELECT
			    	3 AS TYPE1,
			   		SUBSTRING(TRST_DT,1,6) AS CLOSE_YM,
			    	OUT_CO_CD,
			    	OUT_WH_CD,
			    	PRDT_CD,
			    	OWNER_CD,
			    	CLNT_CD,
			    	TYP_CD,
			    	MAKR_CD,
			    	PRJCT_CD,
			        PRDT_SIZE,
                    PRDT_SPEC,
                    PRDT_LEN ,
			    	IMP_YN,
			    	0 AS STOCK_QTY,
			    	0 AS STOCK_WT,
			    	0,
			    	SUM(MOVE_QTY),	
			    	0,
			    	SUM(MOVE_WT),	
		    	    0 AS STOCK_AMT,  
			    	0,
			    	SUM(NVL(MOVE_QTY,0) * NVL(STOCK_UPR,0))  	
			    FROM TB_SM02M01
				WHERE
					OUT_CO_CD = #{coCd}
					<![CDATA[
						AND TO_DATE(TRST_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
					    AND TO_DATE(TRST_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
					]]>
			    GROUP BY
			    	SUBSTRING(TRST_DT,1,6),
			    	OUT_CO_CD,
			    	OUT_WH_CD,
			    	PRDT_CD,
			    	OWNER_CD,
			    	CLNT_CD,
			    	TYP_CD,
			    	MAKR_CD,
			    	PRJCT_CD,
			        PRDT_SIZE,
                    PRDT_SPEC,
                    PRDT_LEN ,
			    	IMP_YN
			 UNION
				SELECT
			    	4 AS TYPE1,
			   		SUBSTRING(TRST_DT,1,6) AS CLOSE_YM,
			    	IN_CO_CD,
			    	IN_WH_CD,
			    	IN_PRDT_CD,
			    	OWNER_CD,
			    	CLNT_CD,
			    	IN_TYP_CD,
			    	MAKR_CD,
			    	IN_PRJCT_CD,
			        IN_PRDT_SIZE,
                    IN_PRDT_SPEC,
                    IN_PRDT_LEN ,
			    	IMP_YN,
			    	0 AS STOCK_QTY,
			    	0 AS STOCK_WT,
			    	SUM(MOVE_QTY),
			    	0,
			    	SUM(MOVE_WT),
			    	0,			
		    	    0 AS STOCK_AMT,  
			    	SUM(NVL(MOVE_QTY,0)  * NVL(STOCK_UPR,0)),
			    	0  	
			    FROM TB_SM02M01	
				WHERE
					IN_CO_CD = #{coCd}
					<![CDATA[
						AND TO_DATE(TRST_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
					    AND TO_DATE(TRST_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
					]]>
			    GROUP BY
			    	SUBSTRING(TRST_DT,1,6),
			    	IN_CO_CD,
			    	IN_WH_CD,
			    	IN_PRDT_CD,
			    	OWNER_CD,
			    	CLNT_CD,
			    	IN_TYP_CD,
			    	MAKR_CD,
			    	IN_PRJCT_CD,
			        IN_PRDT_SIZE,
                    IN_PRDT_SPEC,
                    IN_PRDT_LEN ,
			    	IMP_YN	
			)
			GROUP BY 
				CLOSE_YM,
			    CO_CD,
			    WH_CD,
			    PRDT_CD,
			    OWNER_CD,
			    CLNT_CD,
			    TYP_CD,
			    MAKR_CD,
			    PRJCT_CD,
			    PRDT_SIZE,
                PRDT_SPEC,
<!--                PRDT_LEN ,  -->
			    IMP_YN
			) T
	</insert>
	
	<delete id="deleteCreditClose">
		DELETE
		FROM
			TB_AR07M01
		WHERE
			CO_CD = #{coCd}
			AND CLOSE_YM = #{closeYm}
			AND SELPCH_CD = #{selpchCd}		 
	</delete>
	
	<insert id="insertCreditClose">
		INSERT INTO TB_AR07M01(
			CO_CD, 
			TAXIVC_COPRT, 
			CLOSE_YM, 
			CLNT_CD, 
			PRJCT_CD,
			PRDT_GRP,
			BASIS_CREDIT_AMT, 
			CELL_CLMN_AMT, 
			CELL_TOT_AMT, 
			TRMEND_CREDIT_AMT, 
			CREAT_ID, 
			CREAT_PGM, 
			CREAT_DTTM, 
			UDT_ID, 
			UDT_PGM, 
			UDT_DTTM,
			SELPCH_CD
		)
		SELECT
			CO_CD,
			TAXIVC_COPRT,
			CLOSE_YM,
			CLNT_CD,
			NVL(PRJCT_CD,0),
			PRDT_GRP,
			SUM(BASIS_CREDIT_AMT) AS BASIS_CREDIT_AMT,
			SUM(CELL_CLMN_AMT) AS CELL_CLMN_AMT,
			SUM(CELL_TOT_AMT) AS CELL_TOT_AMT,
			SUM(BASIS_CREDIT_AMT) + SUM(CELL_TOT_AMT) - SUM(CELL_CLMN_AMT) AS TRMEND_CREDIT_AMT,
			#{userId},
		    #{pgmId},
		    SYSDATE,
		    #{userId},
		    #{pgmId},
		    SYSDATE,
		    #{selpchCd}		    
		FROM
		(
			SELECT
				CO_CD,
				TAXIVC_COPRT,
				PRJCT_CD,
				PRDT_GRP,
				'SELPCH2' AS SELPCH_CD,
				TO_CHAR(ADD_MONTHS(TO_DATE(CLOSE_YM, 'YYYYMM'), 1), 'YYYYMM') AS CLOSE_YM,
				CLNT_CD,
				TRMEND_CREDIT_AMT AS BASIS_CREDIT_AMT,
				0 AS CELL_CLMN_AMT,
				0 AS CELL_TOT_AMT,
				0 AS TRMEND_CREDIT_AMT
			FROM
				TB_AR07M01
			WHERE
				SELPCH_CD IN ('SELPCH2','SELPCH4') 
				AND CO_CD = #{coCd}
				AND CLOSE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), -1), 'YYYYMM')
			
			UNION ALL
			
			SELECT
				AR02.CO_CD,
				TAXIVC_COPRT,
				PRJCT_CD,
				BM01.PRDT_GRP,
				'SELPCH2' AS SELPCH_CD,
				SUBSTRING(TRST_DT,1,6) AS CLOSE_YM,
				TRST_CLNT_CD,
				0 AS BASIS_CREDIT_AMT,
				0 AS CELL_CLMN_AMT,
				SUM(BILG_AMT) + SUM(BILG_VAT_AMT) AS CELL_TOT_AMT,
				0 AS TRMEND_CREDIT_AMT
			FROM 
				TB_AR02M01 AR02
				INNER JOIN TB_BM01M01 BM01 ON BM01.PRDT_CD = AR02.TRST_PRDT_CD
			WHERE
				SELPCH_CD IN ('SELPCH2','SELPCH4') 
				AND CO_CD = #{coCd}
				<![CDATA[
					AND TO_DATE(TRST_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
				    AND TO_DATE(TRST_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
			    ]]>
			GROUP BY
				AR02.CO_CD,
				TAXIVC_COPRT,
				PRJCT_CD,
				BM01.PRDT_GRP,
				SELPCH_CD,
				SUBSTRING(TRST_DT,1,6),
				TRST_CLNT_CD
				
			UNION ALL 
			
			SELECT 
				D02.CO_CD,
				M01.TAXIVC_COPRT,
				D02.PRJCT_CD,
				D02.PRDT_GRP,
				'SELPCH2' AS SELPCH_CD,
				SUBSTRING(D02.ETRDPS_DT,1,6) AS CLOSE_YM,
				D02.CLNT_CD,
				0 AS BASIS_CREDIT_AMT,
				SUM(D02.ETRDPS_AMT) AS CELL_CLMN_AMT,
				0 AS CELL_TOT_AMT,
				0 AS TRMEND_CREDIT_AMT
			FROM TB_AR05D02 D02
  				INNER JOIN TB_AR05M01 M01 ON M01.ETRDPS_SEQ = D02.ETRDPS_SEQ
				LEFT  JOIN TB_CM05M01 CM05 ON CODE_ID = M01.ETRDPS_TYP 
			WHERE
				D02.CO_CD = #{coCd}
		        AND ( CODE_RPRC = 'SELPCH2' OR CODE_RPRC IS NULL) <!-- 수금, 상계,  --> 
				<![CDATA[
					AND TO_DATE(D02.ETRDPS_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
				    AND TO_DATE(D02.ETRDPS_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
				]]>
			GROUP BY
				D02.CO_CD,
				TAXIVC_COPRT,
				D02.PRJCT_CD,
				D02.PRDT_GRP,
				<!-- SELPCH_CD,  -->
				SUBSTRING(D02.ETRDPS_DT,1,6),
				D02.CLNT_CD
		)
		GROUP BY
			CO_CD,
			TAXIVC_COPRT,
			NVL(PRJCT_CD,0),
			PRDT_GRP, 
			SELPCH_CD,
			CLOSE_YM,
			CLNT_CD
	</insert>
	
	<insert id="insertCreditClosePur">
		INSERT INTO TB_AR07M01(
			CO_CD,
			TAXIVC_COPRT,
			CLOSE_YM, 
			CLNT_CD, 
<!-- 			PRDT_GRP,  -->
			BASIS_CREDIT_AMT, 
			CELL_CLMN_AMT, 
			CELL_TOT_AMT, 
			TRMEND_CREDIT_AMT, 
			CREAT_ID, 
			CREAT_PGM, 
			CREAT_DTTM, 
			UDT_ID, 
			UDT_PGM, 
			UDT_DTTM,
			SELPCH_CD
		)
		SELECT
			CO_CD,
			TAXIVC_COPRT,
			CLOSE_YM,
			CLNT_CD,
<!-- 			PRDT_GRP,  -->
			SUM(BASIS_CREDIT_AMT) AS BASIS_CREDIT_AMT,
			SUM(CELL_CLMN_AMT) AS CELL_CLMN_AMT,
			SUM(CELL_TOT_AMT) AS CELL_TOT_AMT,
			SUM(BASIS_CREDIT_AMT) + SUM(CELL_TOT_AMT) - SUM(CELL_CLMN_AMT) AS TRMEND_CREDIT_AMT,
			#{userId},
		    #{pgmId},
		    SYSDATE,
		    #{userId},
		    #{pgmId},
		    SYSDATE,
		    #{selpchCd}		    
		FROM
		(
			SELECT
				CO_CD,
				TAXIVC_COPRT,
<!-- 				PRDT_GRP,  -->
				'SELPCH1' AS SELPCH_CD,
				TO_CHAR(ADD_MONTHS(TO_DATE(CLOSE_YM, 'YYYYMM'), 1), 'YYYYMM') AS CLOSE_YM,
				CLNT_CD,
				TRMEND_CREDIT_AMT AS BASIS_CREDIT_AMT,
				0 AS CELL_CLMN_AMT,
				0 AS CELL_TOT_AMT,
				0 AS TRMEND_CREDIT_AMT
			FROM
				TB_AR07M01
			WHERE
				SELPCH_CD IN ('SELPCH1','SELPCH3') 
				AND CO_CD = #{coCd}
				AND CLOSE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), -1), 'YYYYMM')
			
			UNION ALL
			
			SELECT
				CO_CD,
				TAXIVC_COPRT,
<!-- 				'PRDTGRP1' AS PRDT_GRP, -->
				'SELPCH1' AS SELPCH_CD,
				SUBSTRING(TRST_DT,1,6) AS CLOSE_YM,
				TRST_CLNT_CD,
				0 AS BASIS_CREDIT_AMT,
				0 AS CELL_CLMN_AMT,
				SUM(BILG_AMT) + SUM(BILG_VAT_AMT) AS CELL_TOT_AMT,
				0 AS TRMEND_CREDIT_AMT
			FROM 
				TB_AR02M01 AR02
<!-- 				INNER JOIN TB_BM01M01 BM01 ON BM01.PRDT_CD = AR02.TRST_PRDT_CD -->
			WHERE
				SELPCH_CD IN ('SELPCH1','SELPCH3') 
				AND CO_CD = #{coCd}
				<![CDATA[
					AND TO_DATE(TRST_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
				    AND TO_DATE(TRST_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
			    ]]>
			GROUP BY
				CO_CD,
				TAXIVC_COPRT,
<!-- 				BM01.PRDT_GRP, -->
				SELPCH_CD,
				SUBSTRING(TRST_DT,1,6),
				TRST_CLNT_CD
				
			UNION ALL 
			
			SELECT 
				CO_CD,
				TAXIVC_COPRT,
<!-- 				'PRDTGRP1' AS PRDT_GRP, -->
				'SELPCH1' AS SELPCH_CD,
				SUBSTRING(ETRDPS_DT,1,6) AS CLOSE_YM,
				CLNT_CD,
				0 AS BASIS_CREDIT_AMT,
				SUM(ETRDPS_AMT) AS CELL_CLMN_AMT,
				0 AS CELL_TOT_AMT,
				0 AS TRMEND_CREDIT_AMT
			FROM 
				TB_AR05M01
				LEFT JOIN TB_CM05M01 CM05 ON CODE_ID = ETRDPS_TYP 
			WHERE
				CO_CD = #{coCd}
				<!-- AND ETRDPS_TYP IN ('ETRDPS02','ETRDPS03') --> <!-- 지급, 상계 -->
		        AND ( CODE_RPRC = 'SELPCH1' OR CODE_RPRC IS NULL)
				<![CDATA[
					AND TO_DATE(ETRDPS_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
				    AND TO_DATE(ETRDPS_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
				]]>
			GROUP BY
				CO_CD,
				TAXIVC_COPRT,
				<!-- SELPCH_CD,  -->
				SUBSTRING(ETRDPS_DT,1,6),
				CLNT_CD
		)
		GROUP BY
			CO_CD,
			TAXIVC_COPRT,
<!-- 			PRDT_GRP, -->
			SELPCH_CD,
			CLOSE_YM,
			CLNT_CD
	</insert>
	
	<select id="chkBilgFlagYn"  parameterType="Map" resultType="int">
		SELECT 	COUNT(*) 
		  FROM 	TB_AR02M01
		 WHERE
			   CO_CD = #{coCd}
		   AND NVL(BILG_CERT_NO,0) = 0
			<if test="selpchCd == 'SELPCH1'">			
			AND	SELPCH_CD IN ('SELPCH1','SELPCH3') 
			</if>
			<if test="selpchCd == 'SELPCH2'">		
			AND	SELPCH_CD IN ('SELPCH2','SELPCH4') 
			</if>
			<![CDATA[
					AND TO_DATE(TRST_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
				    AND TO_DATE(TRST_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
			]]>
	</select>
	
	<select id="selectCloseYmList" parameterType="Map" resultType="camelMap">
		SELECT 
				A.CO_CD,
				TO_CHAR(TO_DATE(A.CLOSE_YM||'01'), 'YYYY-MM') AS CLOSE_YM,
				A.PCHS_CLOSE_YN,
				A.PCHS_CLOSE_ID,
				TO_CHAR(A.PCHS_CLOSE_DTTM, 'YYYY-MM-DD') AS PCHS_CLOSE_DTTM,
				A.SELL_CLOSE_YN,
				A.SELL_CLOSE_ID,
				TO_CHAR(A.SELL_CLOSE_DTTM, 'YYYY-MM-DD') AS SELL_CLOSE_DTTM,
				A.SELL_CLOSE_DTTM,
				A.ETRDPS_CLOSE_YN,
				A.ETRDPS_CLOSE_ID,
				TO_CHAR(A.ETRDPS_CLOSE_DTTM, 'YYYY-MM-DD') AS ETRDPS_CLOSE_DTTM,
				A.STOCK_CLOSE_YN,
				A.STOCK_CLOSE_ID,
				TO_CHAR(A.STOCK_CLOSE_DTTM, 'YYYY-MM-DD') AS STOCK_CLOSE_DTTM,
				A.ETC_CLOSE_YN,
				A.ETC_CLOSE_ID,
				TO_CHAR(A.ETC_CLOSE_DTTM, 'YYYY-MM-DD') AS ETC_CLOSE_DTTM,
				CLOSE_CNT
		  FROM TB_SD07M01 A 
		  		LEFT OUTER JOIN (
								 SELECT CLOSE_YM, count(*) AS CLOSE_CNT FROM TB_AR07M01 
								  WHERE CLOSE_YM BETWEEN SUBSTRING(#{closeYm},0,4)||'01' AND SUBSTRING(#{closeYm},0,4)||'12'
								<if test="coCd != null and !coCd.equals('')">
								    AND CO_CD = #{coCd}				
								</if>
								  GROUP BY CLOSE_YM
								) AS B
							ON A.CLOSE_YM = B.CLOSE_YM
	     WHERE 1=1
	 	<if test="coCd != null and !coCd.equals('')">
		   AND A.CO_CD = #{coCd}				
		</if>
		   AND A.CLOSE_YM BETWEEN SUBSTRING(#{closeYm},0,4)||'01' AND SUBSTRING(#{closeYm},0,4)||'12'
		ORDER BY A.CLOSE_YM
	</select>
	
</mapper>