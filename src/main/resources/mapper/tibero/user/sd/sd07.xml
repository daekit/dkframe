<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sd.sd07.mapper.SD07Mapper">

	<select id="selectClose" resultType="CamelMap">
		SELECT 
			CO_CD,
			CLOSE_YM,
			PCHS_CLOSE_YN,
			PCHS_CLOSE_ID,
			TO_CHAR(PCHS_CLOSE_DTTM, 'YYYY-MM-DD') AS PCHS_CLOSE_DTTM,
			SELL_CLOSE_YN,
			SELL_CLOSE_ID,
			TO_CHAR(SELL_CLOSE_DTTM, 'YYYY-MM-DD') AS SELL_CLOSE_DTTM,
			ETRDPS_CLOSE_YN,
			ETRDPS_CLOSE_ID,
			TO_CHAR(ETRDPS_CLOSE_DTTM, 'YYYY-MM-DD') AS ETRDPS_CLOSE_DTTM,
			STOCK_CLOSE_YN,
			STOCK_CLOSE_ID,
			TO_CHAR(STOCK_CLOSE_DTTM, 'YYYY-MM-DD') AS STOCK_CLOSE_DTTM,
			ETC_CLOSE_YN,
			ETC_CLOSE_ID,
			TO_CHAR(ETC_CLOSE_DTTM, 'YYYY-MM-DD') AS ETC_CLOSE_DTTM,
			ETC_FIELD1,
			ETC_FIELD2,
			ETC_FIELD3,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			UDT_ID,
			UDT_PGM,
			UDT_DTTM
		FROM
			TB_SD07M01
		WHERE
			CO_CD = #{coCd}
			AND CLOSE_YM = #{closeYm}
	</select>
	
	<update id="saveClose">
		MERGE INTO TB_SD07M01 A
			USING DUAL
			ON (A.CO_CD = #{coCd} AND A.CLOSE_YM = #{closeYm})
		WHEN MATCHED THEN
			UPDATE SET
				PCHS_CLOSE_YN = #{pchsCloseYn},
				PCHS_CLOSE_ID = #{userId},
				PCHS_CLOSE_DTTM = TO_DATE(#{pchsCloseDttm}, 'YYYY-MM-DD'),
				SELL_CLOSE_YN = #{sellCloseYn},
				SELL_CLOSE_ID = #{userId},
				SELL_CLOSE_DTTM = TO_DATE(#{sellCloseDttm}, 'YYYY-MM-DD'),
				ETRDPS_CLOSE_YN = #{etrdpsCloseYn},
				ETRDPS_CLOSE_ID = #{userId},
				ETRDPS_CLOSE_DTTM = TO_DATE(#{etrdpsCloseDttm}, 'YYYY-MM-DD'),
				STOCK_CLOSE_YN = #{stockCloseYn},
				STOCK_CLOSE_ID = #{userId},
				STOCK_CLOSE_DTTM = TO_DATE(#{stockCloseDttm}, 'YYYY-MM-DD'),
				UDT_ID = #{userId},
				UDT_PGM = #{pgmId},
				UDT_DTTM = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT
		(
			CO_CD,
			CLOSE_YM,
			PCHS_CLOSE_YN,
			PCHS_CLOSE_ID,
			PCHS_CLOSE_DTTM,
			SELL_CLOSE_YN,
			SELL_CLOSE_ID,
			SELL_CLOSE_DTTM,
			ETRDPS_CLOSE_YN,
			ETRDPS_CLOSE_ID,
			ETRDPS_CLOSE_DTTM,
			STOCK_CLOSE_YN,
			STOCK_CLOSE_ID,
			STOCK_CLOSE_DTTM,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			UDT_ID,
			UDT_PGM,
			UDT_DTTM
		)
		VALUES(
			#{coCd},
			#{closeYm},
			#{pchsCloseYn},
			#{userId},
			TO_DATE(#{pchsCloseDttm}, 'YYYY-MM-DD'),
			#{sellCloseYn},
			#{userId},
			TO_DATE(#{sellCloseDttm}, 'YYYY-MM-DD'),
			#{etrdpsCloseYn},
			#{userId},
			TO_DATE(#{etrdpsCloseDttm}, 'YYYY-MM-DD'),
			#{stockCloseYn},
			#{userId},
			TO_DATE(#{stockCloseDttm}, 'YYYY-MM-DD'),
			#{userId},
			#{pgmId},
			SYSDATE,
			#{userId},
			#{pgmId},
			SYSDATE
		)	
	</update>
	
	<delete id="deleteClose">
		DELETE
		FROM
			TB_SM01D01
		WHERE
			CLOSE_YM = #{closeYm}
	</delete>
	
	<insert id="insertClose">
		INSERT INTO TB_SM01D01(
			CLOSE_YM, 
			CO_CD, 
			WH_CD, 
			PRDT_CD, 
			OWNER_CD, 
			CLNT_CD, 
			TYP_CD, 
			MAKR_CD, 
			PRJCT_CD, 
			IMP_YN, 
			STOCK_QTY,
			CREAT_ID, 
			CREAT_PGM, 
			CREAT_DTTM, 
			UDT_ID, 
			UDT_PGM, 
			UDT_DTTM
		)
		SELECT 
			CLOSE_YM,
		    CO_CD,
		    WH_CD,
		    TRST_PRDT_CD,
		    OWNER_CD,
		    TRST_CLNT_CD,
		    TYP_CD,
		    MAKR_CD,
		    PRJCT_CD,
		    IMP_YN,
		    SUM(STOCK_QTY) + SUM(TRST_QTY1) - SUM(TRST_QTY2) AS STOCK_QTY,
		    #{userId},
		    #{pgmId},
		    SYSDATE,
		    #{userId},
		    #{pgmId},
		    SYSDATE
		FROM 
		(
			SELECT  
		   		SUBSTRING(TRST_DT,1,6) AS CLOSE_YM,
		    	CO_CD,
		    	WH_CD,
		    	TRST_PRDT_CD,
		    	OWNER_CD,
		    	TRST_CLNT_CD,
		    	TYP_CD,
		    	MAKR_CD,
		    	PRJCT_CD,
		    	IMP_YN,
		    	0 AS STOCK_QTY,
		    	SUM(DECODE(SELPCH_CD, 'SELPCH1', TRST_QTY, 0)) TRST_QTY1,
		    	SUM(DECODE(SELPCH_CD, 'SELPCH2', TRST_QTY, 0)) TRST_QTY2
			FROM 
				TB_AR02M01
			WHERE
				<![CDATA[
				    TO_DATE(TRST_DT, 'YYYYMMDD') >= TO_DATE(#{closeYm}, 'YYYYMM')
				    AND
				    TO_DATE(TRST_DT, 'YYYYMMDD') < ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), 1)
				]]>
		   	GROUP BY 
		   		SUBSTRING(TRST_DT,1,6),
		    	CO_CD,
		    	WH_CD,
		    	TRST_PRDT_CD,
		    	OWNER_CD,
		    	TRST_CLNT_CD,
		    	TYP_CD,
		    	MAKR_CD,
		    	PRJCT_CD,
		    	IMP_YN
		    
			UNION ALL
		   
		 	SELECT
		 		TO_CHAR(ADD_MONTHS(TO_DATE(CLOSE_YM, 'YYYYMM'), 1), 'YYYYMM') CLOSE_YM,
		  		CO_CD,
		  		WH_CD,
		  		PRDT_CD,
		  		OWNER_CD,
		  		CLNT_CD,
		  		TYP_CD,
		  		MAKR_CD,
		  		PRJCT_CD,
		  		IMP_YN,
		  		STOCK_QTY,
		  		0,
		  		0
		 	FROM
		  		TB_SM01D01
		 	WHERE
		 		CLOSE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{closeYm}, 'YYYYMM'), -1), 'YYYYMM')
		)
		GROUP BY 
			CLOSE_YM,
		    CO_CD,
		    WH_CD,
		    TRST_PRDT_CD,
		    OWNER_CD,
		    TRST_CLNT_CD,
		    TYP_CD,
		    MAKR_CD,
		    PRJCT_CD,
		    IMP_YN
	</insert>
	
</mapper>