<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.ar.ar05.mapper.AR05Mapper">
	
	<select id="selectEtrdpsCount" resultType="int">
		SELECT 
			COUNT(*)
		FROM
			TB_AR05M01 D
			LEFT JOIN TB_AR05D01 B ON D.BIL_NO = B.BIL_NO AND D.CO_CD = B.CO_CD AND D.CLNT_CD = B.CLNT_CD 
			INNER JOIN TB_BM02M01 C ON D.CLNT_CD = C.CLNT_CD
		<where>
			<if test="coCd != null and !coCd.equals('')">
				D.CO_CD = #{coCd}
			</if>
			<if test="startDt != null and !startDt.equals('')">
				<![CDATA[ AND TO_DATE(D.ETRDPS_DT, 'YYYYMMDD') >= TO_DATE(#{startDt}, 'YYYY-MM-DD') ]]>
			</if>
			<if test="endDt != null and !endDt.equals('')">
				<![CDATA[ AND TO_DATE(D.ETRDPS_DT, 'YYYYMMDD') < TO_DATE(#{endDt}, 'YYYY-MM-DD') + 1 ]]>
			</if>
			<if test="clntDivCd != null and !clntDivCd.equals('')">
				AND C.CLNT_DIV_CD = #{clntDivCd}
			</if>
			<if test="setleTypCd != null and !setleTypCd.equals('')">
				AND D.SETLE_TYP_CD = #{setleTypCd}
			</if>
			<if test="etrdpsBkacCd != null and !etrdpsBkacCd.equals('')">
				AND D.ETRDPS_BKAC_CD = #{etrdpsBkacCd}
			</if>
			<if test="etrdpsTyp != null and !etrdpsTyp.equals('')">
				AND D.ETRDPS_TYP = #{etrdpsTyp}
			</if>
			<if test="clntNm != null and !clntNm.equals('')">
				AND C.CLNT_NM LIKE '%'|| #{clntNm} ||'%'
			</if>
			<if test="clntCd != null and !clntCd.equals('')">
				AND C.CLNT_CD = #{clntCd}
			</if>
        	<if test="taxivcCoprt != null and !taxivcCoprt.equals('')">
		        AND D.TAXIVC_COPRT = #{taxivcCoprt}
	        </if>
			<if test="prdtGrp != null and !prdtGrp.equals('')">
				AND D.PRDT_GRP = #{prdtGrp}
			</if>        
			<if test="autoMapping != null and !autoMapping.equals('')">
				AND D.AUTO_MATCH_FLAG = #{autoMapping}
			</if>
			<if test="completeMap != null and !completeMap.equals('')">
				AND DECODE(0, D.ETRDPS_AMT - NVL((SELECT SUM(E.ETRDPS_AMT) FROM TB_AR05D02 E WHERE E.ETRDPS_SEQ = D.ETRDPS_SEQ AND TRST_CERTI_NO != 0),0), 'Y', 'N') = #{completeMap}
			</if>
		</where>
	</select>
	
	<select id="selectEtrdpsList" resultType="CamelMap">
		SELECT
			*
		FROM
		(
			SELECT
				ROWNUM AS RNUM, A.*
			FROM
			(
				SELECT
				    D.CO_CD,
					FN_CM05M01_CD_TO_NM(D.CO_CD) AS CO_NM,
					D.ETRDPS_SEQ,
					TO_CHAR(TO_DATE(D.ETRDPS_DT, 'YYYYMMDD'), 'YYYY-MM-DD') ETRDPS_DT,
					C.CLNT_CD,
					C.CLNT_NM,
					D.TAXIVC_COPRT,
					FN_CM05M01_CD_TO_NM(D.SETLE_TYP_CD) AS SETLE_TYP_NM,
					D.ETRDPS_AMT,
					FN_CM05M01_CD_TO_NM(D.ETRDPS_BKAC_CD) AS ETRDPS_BKAC_NM, 
					D.SUMRY,
					FN_CM05M01_CD_TO_NM(B.BIL_TYP_CD) AS BIL_TYP_NM,
					B.BIL_NO,
					TO_CHAR(TO_DATE(B.EXPRTN_DT, 'YYYYMMDD'), 'YYYY-MM-DD') EXPRTN_DT,
					FN_CM05M01_CD_TO_NM(B.PYMNT_BANK_CD) AS PYMNT_BANK_NM,
					B.ENDRS_PSN,
					ETRDPS_TYP,
					FN_CM05M01_CD_TO_NM(D.ETRDPS_TYP) AS ETRDPS_TYP_NM,
					D.TAXIVC_COPRT,
					FN_CM05M01_CD_TO_NM(D.TAXIVC_COPRT) AS TAXIVC_COPRT_NM,
					D.MSCL_PRFT_YN,
					D.AUTO_MATCH_FLAG,
					D.ETRDPS_AMT - NVL((SELECT SUM(E.ETRDPS_AMT) FROM TB_AR05D02 E WHERE E.ETRDPS_SEQ = D.ETRDPS_SEQ AND TRST_CERTI_NO != 0),0) AS REMAIN_AMT,
					DECODE(0, D.ETRDPS_AMT - NVL((SELECT SUM(E.ETRDPS_AMT) FROM TB_AR05D02 E WHERE E.ETRDPS_SEQ = D.ETRDPS_SEQ AND TRST_CERTI_NO != 0),0), 'Y', 'N') AS REMAIN_YN,
				    (SELECT dz_code   FROM TB_CM05M01  WHERE CODE_ID = ETRDPS_TYP) AS DZ_CODE,   /*더존 코드 추가  2022 KDM*/
                    (SELECT dz_code   FROM TB_CM05M01  WHERE CODE_ID = D.SETLE_TYP_CD) AS DZ_CODE2, /*더존 코드 추가  2022 KDM*/
                    (SELECT CODE_DESC FROM TB_CM05M01  WHERE CODE_ID = ETRDPS_BKAC_CD) AS BK_ACT,  /*은행계좌 추가   2022 KDM*/ 
                    (SELECT CRN FROM TB_BM02M01 WHERE CLNT_CD =  C.CLNT_CD) AS CRN,/*사업자 번호  추가   2022 KDM*/ 
                    D.SETLE_TYP_CD,/*거래 code   2022 KDM*/ 
                    (SELECT dz_code  FROM TB_CM05M01  WHERE CODE_ID = D.CO_CD) AS DZ_CO , /*법인 코드 추가   2022 KDM*/ 
                    DECODE(D.DZ_SND_SEQ,NULL,'N','Y') AS DZ_SND_YN,
                    D.DZ_SND_SEQ
				FROM
					TB_AR05M01 D
					LEFT JOIN TB_AR05D01 B ON D.BIL_NO = B.BIL_NO AND D.CO_CD = B.CO_CD AND D.CLNT_CD = B.CLNT_CD 
					INNER JOIN TB_BM02M01 C ON D.CLNT_CD = C.CLNT_CD
					<!-- LEFT JOIN TB_AR05D02 E ON D.ETRDPS_SEQ = E.ETRDPS_SEQ -->
				<where>
					<if test="coCd != null and !coCd.equals('')">
						D.CO_CD = #{coCd}
					</if>
					<if test="startDt != null and !startDt.equals('')">
						<![CDATA[ AND TO_DATE(D.ETRDPS_DT, 'YYYYMMDD') >= TO_DATE(#{startDt}, 'YYYY-MM-DD') ]]>
					</if>
					<if test="endDt != null and !endDt.equals('')">
						<![CDATA[ AND TO_DATE(D.ETRDPS_DT, 'YYYYMMDD') < TO_DATE(#{endDt}, 'YYYY-MM-DD') + 1 ]]>
					</if>
					<if test="clntDivCd != null and !clntDivCd.equals('')">
						AND C.CLNT_DIV_CD = #{clntDivCd}
					</if>
					<if test="clntNm != null and !clntNm.equals('')">
						AND C.CLNT_NM LIKE '%'|| #{clntNm} ||'%'
					</if>
					<if test="clntCd != null and !clntCd.equals('')">
						AND C.CLNT_CD = #{clntCd}
					</if>
					<if test="setleTypCd != null and !setleTypCd.equals('')">
						AND D.SETLE_TYP_CD = #{setleTypCd}
					</if>
					<if test="etrdpsBkacCd != null and !etrdpsBkacCd.equals('')">
						AND D.ETRDPS_BKAC_CD = #{etrdpsBkacCd}
					</if>
		        	<if test="etrdpsTyp != null and !etrdpsTyp.equals('')">
				        AND D.ETRDPS_TYP = #{etrdpsTyp}
			        </if>
		        	<if test="taxivcCoprt != null and !taxivcCoprt.equals('')">
				        AND D.TAXIVC_COPRT = #{taxivcCoprt}
			        </if>
			        <if test="prdtGrp != null and !prdtGrp.equals('')">
						AND D.PRDT_GRP = #{prdtGrp}
					</if>
					<if test="autoMapping != null and !autoMapping.equals('')">
						AND D.AUTO_MATCH_FLAG = #{autoMapping}
					</if>
					<if test="completeMap != null and !completeMap.equals('')">
						AND DECODE(0, D.ETRDPS_AMT - NVL((SELECT SUM(E.ETRDPS_AMT) FROM TB_AR05D02 E WHERE E.ETRDPS_SEQ = D.ETRDPS_SEQ AND TRST_CERTI_NO != 0),0), 'Y', 'N') = #{completeMap}
					</if>
				</where>
				ORDER BY D.CO_CD, D.TAXIVC_COPRT, D.ETRDPS_DT, C.CLNT_NM, D.CREAT_DTTM DESC
			) A
		)
		WHERE
			RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>
	
	<select id="selectEtrdpsInfo" resultType ="CamelMap">
		SELECT
			D.CO_CD,
			D.ETRDPS_SEQ,
			D.CLNT_CD,
			C.CLNT_NM,
			TO_CHAR(TO_DATE(D.ETRDPS_DT, 'YYYYMMDD'), 'YYYY-MM-DD') ETRDPS_DT,
			D.SETLE_TYP_CD,
			FN_CM05M01_CD_TO_NM(D.SETLE_TYP_CD) AS SETLE_TYP_NM,
			D.TAXIVC_COPRT,
			D.MSCL_PRFT_YN,
			D.ETRDPS_AMT,
			D.ETRDPS_BKAC_CD,
			D.BIL_NO,
			D.SUMRY,
			D.ETRDPS_TYP,
			D.PRDT_GRP,
			D.AUTO_MATCH_FLAG
		FROM
			TB_AR05M01 D
			INNER JOIN TB_BM02M01 C ON D.CLNT_CD = C.CLNT_CD
		WHERE
			ETRDPS_SEQ = ${etrdpsSeq}
	</select>
	
	<select id="selectBillInfo" resultType="CamelMap">
		SELECT
			B.BIL_TYP_CD,
			B.BIL_NO,
			TO_CHAR(TO_DATE(B.EXPRTN_DT, 'YYYYMMDD'), 'YYYY-MM-DD') EXPRTN_DT,
			B.PYMNT_BANK_CD,
			B.BIL_PBLS_PSN,
			B.ENDRS_PSN_CNT,
			B.BIL_AMT,
			TO_CHAR(TO_DATE(B.BIL_PBLS_DT, 'YYYYMMDD'), 'YYYY-MM-DD') BIL_PBLS_DT,
			B.ENDRS_PSN,
			B.SUMRY
		FROM
			TB_AR05D01 B
		WHERE
			  B.CO_CD   = #{coCd}
		  AND B.CLNT_CD = #{clntCd}
	      AND B.BIL_NO  = #{bilNo}
	</select>
	
	<insert id="insertEtrdps">
		<selectKey keyProperty="etrdpsSeq" resultType="String" order="BEFORE">
			SELECT TB_AR05M01_SQ01.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_AR05M01 (
			CO_CD,
			ETRDPS_DT,
			CLNT_CD,
			ETRDPS_SEQ,
			SETLE_TYP_CD,
			ETRDPS_AMT,
			ETRDPS_BKAC_CD,
			<if test="bilNo != null and !bilNo.equals('')">
				BIL_NO,
			</if>
			SUMRY,
			CREAT_ID, CREAT_PGM, CREAT_DTTM,
			UDT_ID, UDT_PGM, UDT_DTTM,
			ETRDPS_TYP,
			TAXIVC_COPRT,
			MSCL_PRFT_YN,
			PRDT_GRP,
			AUTO_MATCH_FLAG	
	 	) VALUES (
	 		#{coCd},
			#{etrdpsDt},
			#{clntCd},
			#{etrdpsSeq},
			#{setleTypCd},
			#{etrdpsAmt},
			#{etrdpsBkacCd},
			<if test="bilNo != null and !bilNo.equals('')">
				#{bilNo},
			</if>
			#{sumry},
			#{userId}, #{pgmId}, SYSDATE,
			#{userId}, #{pgmId}, SYSDATE,
			#{etrdpsTyp},
			#{taxivcCoprt},
			#{msclPrftYn},
			#{prdtGrp},
			#{autoMatchFlag}
	 	)
	</insert>
	
	<insert id="insertBill">
		INSERT INTO TB_AR05D01 (
			CO_CD,
			CLNT_CD,
			BIL_NO,
			BIL_TYP_CD,
			EXPRTN_DT,
			PYMNT_BANK_CD,
			BIL_PBLS_PSN,
			ENDRS_PSN_CNT,
			ENDRS_PSN,
			BIL_AMT,
			BIL_PBLS_DT,
			SUMRY,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			UDT_ID,
			UDT_PGM,
			UDT_DTTM
	 	) VALUES (
	 		#{coCd},
	 		#{clntCd},
	 		#{bilNo},
	 		#{bilTypCd},
	 		#{exprtnDt},
	 		#{pymntBankCd},
	 		#{bilPblsPsn},
	 		#{endrsPsnCnt},
	 		#{endrsPsn},
	 		#{bilAmt},
	 		#{bilPblsDt},
	 		#{sumry},
	 		#{userId},
	 		#{pgmId},
	 		SYSDATE,
	 		#{userId},
	 		#{pgmId},
	 		SYSDATE
	 	)
	</insert>
	
	<select id="callCreditLoan" resultType="int">
     SELECT F_CREDIT_LOAN_PRDTGRP('D', #{clntCd}, #{coCd},#{prdtGrp},#{etrdpsDt}, #{etrdpsAmt}) FROM DUAL
<!--      SELECT F_CREDIT_LOAN('D', #{clntCd}, #{coCd}, #{etrdpsDt}, #{etrdpsAmt}) FROM DUAL -->
    </select>
	
	<update id="updateEtrdps">
		UPDATE TB_AR05M01
		SET
			ETRDPS_DT      = #{etrdpsDt},
			ETRDPS_BKAC_CD = #{etrdpsBkacCd},
			SUMRY          = #{sumry},
			UDT_ID         = #{userId},
			UDT_PGM        = #{pgmId}, 
			UDT_DTTM       = SYSDATE,
			ETRDPS_TYP     = #{etrdpsTyp},
			TAXIVC_COPRT   = #{taxivcCoprt},
			MSCL_PRFT_YN   = #{msclPrftYn},
			PRDT_GRP	   = #{prdtGrp},
			AUTO_MATCH_FLAG= #{autoMatchFlag}
		WHERE
			ETRDPS_SEQ     = #{etrdpsSeq}
	</update>
	
	<update id="updateBill">
		UPDATE TB_AR05D01
		SET
			BIL_TYP_CD    = #{bilTypCd},
			EXPRTN_DT     = #{exprtnDt},
			PYMNT_BANK_CD = #{pymntBankCd},
			BIL_PBLS_PSN  = #{bilPblsPsn},
			ENDRS_PSN_CNT = #{endrsPsnCnt},
			BIL_AMT       = #{bilAmt},
			BIL_PBLS_DT   = #{bilPblsDt},
			ENDRS_PSN     = #{endrsPsn},
			SUMRY         = #{sumry},
			UDT_ID        = #{userId},
			UDT_PGM       = #{pgmId},
			UDT_DTTM      = SYSDATE
		WHERE
			  CO_CD   = #{coCd}
		  AND CLNT_CD = #{clntCd}
	      AND BIL_NO  = #{bilNo}
	</update>
	
	<delete id="deleteEtrdps">
		DELETE
		FROM
			TB_AR05M01
		WHERE
			ETRDPS_SEQ = #{etrdpsSeq}
	</delete>
	
	<delete id="deleteBill">
		DELETE
		FROM
			TB_AR05D01
		WHERE
			BIL_NO = #{bilNo}
	</delete>
	
	<select id="selectEtrdpsDtlList" parameterType="Map" resultType="CamelMap">
		SELECT T.*
			 , TO_CHAR(CASE 
	                        WHEN CD.CODE_RPRC = 'MON' THEN LAST_DAY(ADD_MONTHS(TRUNC(TO_DATE(T.TRST_DT2),'MM'), NVL(CD.CODE_ETC,0)) -1) + NVL(CLMN_DAY,0)
					    	ELSE TO_DATE(T.TRST_DT2, 'YYYYMMDD') -1 + NVL(CD.CODE_ETC,0) + NVL(CLMN_DAY,0) END, 'YYYY-MM-DD')	EXP_DAY  		     		    
		FROM (SELECT A.CO_CD
				 , A.TRST_CLNT_CD
				 , C.CLNT_NM
				 , TO_CHAR(TO_DATE(A.TRST_DT, 'YYYYMMDD'), 'YYYY-MM-DD') TRST_DT
				 , A.TRST_DT TRST_DT2
				 , A.PRJCT_CD
				 , B.PRJCT_NM
				, FN_CM05M01_CD_TO_NM(NVL(CASE WHEN (A.PRJCT_CD != 0 OR A.PRJCT_CD != NULL) THEN B.PMNT_MTD_CD
				 		ELSE C.SELL_PMNT_MTD_CD END, C.SELL_PMNT_MTD_CD)) PMNT_MTD_NM
				 , NVL(CASE WHEN (A.PRJCT_CD != 0 OR A.PRJCT_CD != NULL) THEN B.PMNT_MTD_CD
				 		ELSE C.SELL_PMNT_MTD_CD END,C.SELL_PMNT_MTD_CD)  PMNT_MTD_CD -- 결제방법
				 , FN_CM05M01_CD_TO_NM(NVL(CASE WHEN (A.PRJCT_CD != 0 OR A.PRJCT_CD != NULL) THEN B.CLMN_DIV_CD
				 	    ELSE C.SELL_CLMN_DIV_CD END,C.SELL_CLMN_DIV_CD)) CLMN_DIV_NM
				 , NVL(CASE WHEN (A.PRJCT_CD != 0 OR A.PRJCT_CD != NULL) THEN B.CLMN_DIV_CD
				 	    ELSE C.SELL_CLMN_DIV_CD END,C.SELL_CLMN_DIV_CD) CLMN_DIV_CD -- 수금조건
				 , NVL(CASE WHEN (A.PRJCT_CD != 0 OR A.PRJCT_CD != NULL) THEN B.CLMN_DAY
				 	    ELSE C.SELL_CLMN_DAY END,C.SELL_CLMN_DAY) CLMN_DAY -- 수금일자
				 , NVL(A.BILG_VAT_AMT,0) + NVL(A.BILG_AMT,0) - NVL(A.ETRDPS_AMT,0) BILG_TOT -- 청구금액
				 , A.BILG_CERT_NO
				 , A.TRST_CERTI_NO
				 , E.PRDT_GRP
			  FROM TB_AR02M01 A
				LEFT OUTER JOIN TB_SD05M01 B	ON A.PRJCT_CD     = B.PRJCT_CD
				LEFT OUTER JOIN TB_BM02M01 C	ON A.TRST_CLNT_CD = C.CLNT_CD
				LEFT OUTER JOIN TB_BM01M01 E	ON A.TRST_PRDT_CD = E.PRDT_CD
				WHERE A.CO_CD        = #{coCd}
				  AND A.TRST_CLNT_CD = #{clntCd}
				  AND A.TAXIVC_COPRT = #{taxivcCoprt}
<!-- 				  AND ( A.BILG_CERT_NO IS NOT NULL  OR A.TRST_DT = '20210630') -->
				  AND A.ETRDPS_YN    = 'N'
				  AND E.PRDT_GRP     = #{prdtGrp}
				  AND A.SELPCH_CD    = #{selpchCd}
				ORDER BY  A.TRST_DT) T
		LEFT OUTER JOIN TB_CM05M01 CD
		ON T.CLMN_DIV_CD = CD.CODE_ID
	</select>
	
	<select id="selectEtrdpsDtlUpdate" parameterType="Map" resultType="CamelMap">
	SELECT A.PRJCT_CD
		 , A.CO_CD
		 , A.CLNT_CD AS TRST_CLNT_CD
		 , TO_CHAR(TO_DATE(A.TRST_DT, 'YYYYMMDD'), 'YYYY-MM-DD') TRST_DT
		 , A.SELL_CLMN_DIV_CD AS CLMN_DIV_CD
		 , A.SELL_PMNT_MTD_CD AS PMNT_MTD_CD
		 , A.SELL_CLMN_DAY AS CLMN_DAY
		 , A.TRST_CERTI_NO 
		 , A.BILG_CERT_NO 
		 , A.PRDT_GRP 
		 , C.CLNT_NM
		 , FN_CM05M01_CD_TO_NM(A.SELL_CLMN_DIV_CD) CLMN_DIV_NM
		 , FN_CM05M01_CD_TO_NM(A.SELL_PMNT_MTD_CD) PMNT_MTD_NM
		 , B.PRJCT_NM
		 , A.ETRDPS_AMT AS BILG_TOT
		 , TO_CHAR(CASE WHEN D.CODE_RPRC = 'MON' THEN ADD_MONTHS(TO_DATE(TRST_DT, 'YYYYMMDD'), D.CODE_ETC)
		     		ELSE ADD_MONTHS(TO_DATE(TRST_DT, 'YYYYMMDD'), 1) + A.SELL_CLMN_DAY END, 'YYYY-MM-DD') EXP_DAY
	  FROM TB_AR05D02 A
	LEFT OUTER JOIN TB_SD05M01 B
	ON A.PRJCT_CD = B.PRJCT_CD
	LEFT OUTER JOIN TB_BM02M01 C
	ON A.CLNT_CD = C.CLNT_CD
	LEFT OUTER JOIN TB_CM05M01 D
		ON A.SELL_CLMN_DIV_CD = D.CODE_ID 
	WHERE ETRDPS_SEQ = #{etrdpsSeq} 
	ORDER BY A.TRST_DT
	</select>
	
	<update id="updateEtrdpsDtl" parameterType="Map">	
	UPDATE TB_AR02M01
	   SET ETRDPS_AMT = NVL(ETRDPS_AMT, 0) + #{etrdpsAmt}
	     , ETRDPS_YN = CASE WHEN #{etrdpsAmt} = (BILG_VAT_AMT + BILG_AMT - ETRDPS_AMT) THEN 'Y' ELSE 'N' END
	 WHERE CO_CD = #{coCd}
	   AND TRST_CERTI_NO = #{trstCertiNo}
	</update>
	
	<update id="updateEtrdpsDt" parameterType="Map">	
	UPDATE TB_AR05D02
	   SET ETRDPS_DT = REPLACE(#{etrdpsDt}, '-', '')
	   	 , EXPRTN_DT = REPLACE(#{exprtnDt, jdbcType=VARCHAR}, '-', '')
	 WHERE ETRDPS_SEQ = #{etrdpsSeq}
	</update>
	
	<update id="updateTrstCertiNo" parameterType="Map">	
	 UPDATE TB_AR05D02
		SET   BILG_CERT_NO     = 0
			, TRST_CERTI_NO    = 0
			, TRST_DT          = ''
			, SELL_CLMN_DIV_CD = ''
			, SELL_PMNT_MTD_CD = ''
			, SELL_CLMN_DAY    = ''
			, TAX_BILG_NO      = ''
			, PRJCT_CD         = ''
	 WHERE BILG_CERT_NO = #{bilgCertNo}
	</update>

	<insert id="insertEtrdpsDtl" parameterType="Map">
	INSERT INTO TB_AR05D02
	(
		CO_CD
		, ETRDPS_SEQ
		, ETRDPS_DTL_SEQ
		, BILG_CERT_NO
		, TRST_CERTI_NO
		, ETRDPS_DT
		, TRST_DT
		, CLNT_CD
		, SELL_CLMN_DIV_CD
		, SELL_PMNT_MTD_CD
		, SELL_CLMN_DAY
		, TAX_BILG_NO
		, PRJCT_CD
		, ETRDPS_AMT
		, CREAT_ID
		, CREAT_PGM
		, CREAT_DTTM
		, PRDT_GRP
		, EXPRTN_DT
	)
	VALUES
	(
		#{coCd}
		, #{etrdpsSeq}
		, (SELECT NVL(MAX(ETRDPS_DTL_SEQ), 0) + 1 FROM TB_AR05D02 WHERE ETRDPS_SEQ = #{etrdpsSeq})
		, #{bilgCertNo}
		, #{trstCertiNo}
		, REPLACE(#{etrdpsDt}, '-', '')
		, REPLACE(#{trstDt}, '-', '')
		, #{trstClntCd, jdbcType=VARCHAR}
		, #{clmnDivCd, jdbcType=VARCHAR}
		, #{pmntMtdCd, jdbcType=VARCHAR}
		, REPLACE(#{clmnDay, jdbcType=VARCHAR}, '-', '')
		, #{taxBilgNo}
		, NVL(#{prjctCd, jdbcType=VARCHAR},0)
		, #{etrdpsAmt, jdbcType=VARCHAR}
		, #{userId}
		, #{pgmId}
		, SYSDATE
		, NVL(#{prdtGrp}, 'PRDTGRP1')
		, #{exprtnDt, jdbcType=VARCHAR}
	)
	</insert>
	
	<insert id="insertAdvPay" parameterType="Map">
	INSERT INTO TB_AR05D02
	(
		CO_CD
		, ETRDPS_SEQ
		, ETRDPS_DTL_SEQ
		, BILG_CERT_NO
		, TRST_CERTI_NO
		, ETRDPS_DT
		, TRST_DT
		, CLNT_CD
		, SELL_CLMN_DIV_CD
		, SELL_PMNT_MTD_CD
		, SELL_CLMN_DAY
		, TAX_BILG_NO
		, PRJCT_CD
		, ETRDPS_AMT
		, CREAT_ID
		, CREAT_PGM
		, CREAT_DTTM
		, PRDT_GRP
		, EXPRTN_DT
	)
	VALUES
	(
		#{coCd}
		, #{etrdpsSeq}
		, (SELECT NVL(MAX(ETRDPS_DTL_SEQ), 0) + 1 FROM TB_AR05D02 WHERE ETRDPS_SEQ = #{etrdpsSeq})
		, '0'
		, '0'
		, REPLACE(#{etrdpsDt}, '-', '')
		, NULL
		, #{clntCd}
		, #{clmnDivCd, jdbcType=VARCHAR}
		, #{pmntMtdCd, jdbcType=VARCHAR}
		, REPLACE(#{clmnDay, jdbcType=VARCHAR}, '-', '')
		, '0'
		, #{prjctCd, jdbcType=VARCHAR}
		, #{diffAmt}
		, #{userId}
		, #{pgmId}
		, SYSDATE
		, NVL(#{prdtGrp, jdbcType=VARCHAR}, 'PRDTGRP1')
		, #{exprtnDt, jdbcType=VARCHAR}
	)
	</insert>
	
	<update id="updateAdvPay" parameterType="Map">
	UPDATE TB_AR05D02 SET
		ETRDPS_AMT = #{diffAmt}
		, PRDT_GRP = NVL(#{prdtGrp, jdbcType=VARCHAR}, 'PRDTGRP1')
			WHERE ETRDPS_SEQ = #{etrdpsSeq} AND TRST_CERTI_NO = '0'
	</update>
	
	<delete id="deleteAdvPay" parameterType="Map">
	DELETE FROM TB_AR05D02
		WHERE ETRDPS_SEQ = #{etrdpsSeq} AND TRST_CERTI_NO = '0'
	</delete>
	
	<update id="updateEtrdpsDtlDelete" parameterType="Map">
	UPDATE TB_AR02M01 AR02
	   SET ETRDPS_YN = 'N'
	     , ETRDPS_AMT = (SELECT SUM(D02.ETRDPS_AMT) FROM TB_AR05D02 D02 WHERE D02.TRST_CERTI_NO =  AR02.TRST_CERTI_NO AND ETRDPS_SEQ != #{etrdpsSeq})
	 WHERE TRST_CERTI_NO IN (SELECT TRST_CERTI_NO FROM TB_AR05D02 WHERE ETRDPS_SEQ = #{etrdpsSeq})
	</update>
	
	<delete id="deleteEtrdpsDtl" parameterType="Map">
	DELETE FROM TB_AR05D02
	 WHERE ETRDPS_SEQ = #{etrdpsSeq}
	</delete>
	
	<select id="selectEtrdpsMapCount" parameterType="Map" resultType="int">
	SELECT COUNT(*)
	  FROM TB_AR05D02 A
	LEFT OUTER JOIN TB_CM05M01 C
		ON A.SELL_CLMN_DIV_CD = C.CODE_ID 
	LEFT OUTER JOIN TB_BM02M01 D
		ON A.CLNT_CD = D.CLNT_CD
	LEFT OUTER JOIN TB_SD05M01 E
		ON A.PRJCT_CD = E.PRJCT_CD
	  WHERE A.CO_CD = #{coCd}
		AND A.ETRDPS_DT BETWEEN REPLACE(#{startDt}, '-', '') AND REPLACE(#{endDt}, '-', '')
		<if test="clntCd != null and !clntCd.equals('')">
		AND A.CLNT_CD = #{clntCd}
		</if>
	</select>
	
	<select id="selectEtrdpsMap" parameterType="Map" resultType="CamelMap">
	SELECT A.CO_CD
		 , FN_CM05M01_CD_TO_NM(A.CO_CD) AS CO_NM
	     , A.ETRDPS_SEQ
	     , A.ETRDPS_DTL_SEQ
	     , A.BILG_CERT_NO
	     , A.TRST_CERTI_NO
	     , TO_CHAR(TO_DATE(A.ETRDPS_DT, 'YYYYMMDD'), 'YYYY-MM-DD') ETRDPS_DT
	     , TO_CHAR(CASE WHEN C.CODE_RPRC = 'MON' THEN ADD_MONTHS(TO_DATE(TRST_DT, 'YYYYMMDD'), C.CODE_ETC)
	     		ELSE ADD_MONTHS(TO_DATE(TRST_DT, 'YYYYMMDD'), 1) + A.SELL_CLMN_DAY END, 'YYYY-MM-DD') EXP_DAY
	     , C.CODE_RPRC
	     , C.CODE_ETC
	     , TO_CHAR(TO_DATE(A.TRST_DT, 'YYYYMMDD'), 'YYYY-MM-DD') TRST_DT
	     , TO_CHAR(SYSDATE, 'YYYYMMDD') - TO_CHAR(CASE WHEN C.CODE_RPRC = 'MON' THEN ADD_MONTHS(TO_DATE(TRST_DT, 'YYYYMMDD'), C.CODE_ETC)
	     		ELSE ADD_MONTHS(TO_DATE(TRST_DT, 'YYYYMMDD'), 1) + A.SELL_CLMN_DAY END, 'YYYYMMDD') AS OVER_DAY
	     , A.CLNT_CD
	     , D.CLNT_NM
	     , FN_CM05M01_CD_TO_NM(A.SELL_CLMN_DIV_CD) SELL_CLMN_DIV_CD
	     , FN_CM05M01_CD_TO_NM(A.SELL_PMNT_MTD_CD) SELL_PMNT_MTD_CD
	     , A.SELL_CLMN_DAY
	     , A.TAX_BILG_NO
	     , A.PRJCT_CD
	     , E.PRJCT_NM
	     , A.ETRDPS_AMT
	     , A.PRDT_GRP
	     , A.EXPRTN_DT
	     , TO_CHAR(TO_DATE(A.TRST_DT, 'YYYYMMDD'), 'YYYY-MM-DD') TRST_DT
	  FROM TB_AR05D02 A
	LEFT OUTER JOIN TB_CM05M01 C
		ON A.SELL_CLMN_DIV_CD = C.CODE_ID 
	LEFT OUTER JOIN TB_BM02M01 D
		ON A.CLNT_CD = D.CLNT_CD
	LEFT OUTER JOIN TB_SD05M01 E
		ON A.PRJCT_CD = E.PRJCT_CD
	  WHERE A.CO_CD = #{coCd}
		AND A.ETRDPS_DT BETWEEN REPLACE(#{startDt}, '-', '') AND REPLACE(#{endDt}, '-', '')
		<if test="clntCd != null and !clntCd.equals('')">
		AND A.CLNT_CD = #{clntCd}
		</if>
	</select>
	
	
	
	
	<update id="updateDzSndSeq">
	 /* ar05. updateDzSndSeq 더존 dzsndseq 값 update */
		UPDATE TB_AR05M01
	 	   SET
		  	   DZ_SND_SEQ	   = #{dzSndSeq}
		 WHERE CO_CD 		   = #{coCd} 
		   AND ETRDPS_DT       = REPLACE(#{etrdpsDt}, '-', '')  
		   AND ETRDPS_SEQ      = #{etrdpsSeq}
		   AND CLNT_CD         = #{clntCd}		 
	</update>
	
</mapper>