<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.ar.ar02.mapper.AR02Mapper">

	<insert id="insertPchsSell" parameterType="Map">
		<selectKey keyProperty="trstCertiNo" resultType="String" order="BEFORE">
			SELECT TB_AR02M01_SQ01.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_AR02M01 
		(
			CO_CD,
			TRST_CERTI_NO,
			SELPCH_CD,
			TAXIVC_COPRT,
			TRST_DT,
			TRST_CLNT_CD,
			TRST_PRDT_CD,
			OWNER_CD,
			IMP_YN,
			TYP_CD,
			TRSP_TYP_CD,
			TRST_RPRC_SEQ,
			TRST_DTL_SEQ,
			PRDT_LEN,
			ODR_NO,
			SALES_MNG,
			PRJCT_CD,
			MAKR_CD,
			WH_CD,
			MNG_TEL,
			DLVR_DTTM,
			DIRTRS_YN,
			PRDT_DIV,
			PRDT_STKN,
			PRDT_SIZE,
			PRDT_UNIT,
			PRDT_UPR,
			STOCK_UPR,
			PCHS_UPR,
			SELL_UPR,
			TRST_QTY,
			TRST_WT,
			TRST_UPR,
			TRST_AMT,
			REAL_TRST_QTY,
			REAL_TRST_WT,
			REAL_TRST_UPR,
			REAL_TRST_AMT,
			BILG_QTY,
			BILG_WT,
			BILG_UPR,
			BILG_AMT,
			TRST_DC_AMT,
			ETC_AMT,
			TRSP_RMK,
			TRANS_AMT,
			SHIP_VEH_NO,
			CLNT_NM,
			BILG_CERT_NO,
			LOSS_RATE,
			ODR_CREAT_DIV,
			ETC_FIELD1,
			ETC_FIELD2,
			ETC_FIELD3,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			UDT_ID,
			UDT_PGM,
			UDT_DTTM, 
	        SALES_AREA_CD,
	        SITE_CD,
	        BILG_VAT_AMT,
	        PRDT_SPEC
		)
		VALUES 
		(
			#{coCd},
			#{trstCertiNo},
			#{selpchCd},
			#{estCoprt, jdbcType=VARCHAR},
			#{trstDt,   jdbcType=VARCHAR},
			#{clntCd,   jdbcType=VARCHAR},
			#{prdtCd,   jdbcType=VARCHAR},
			#{ownerCd,  jdbcType=VARCHAR},
			#{impYn},
			#{typCd},
			#{trspTypCd ,  jdbcType=VARCHAR},
			#{trstRprcSeq, jdbcType=VARCHAR},
			#{trstDtlSeq,  jdbcType=VARCHAR},
			#{prdtLen,     jdbcType=VARCHAR},
			#{odrNo,       jdbcType=VARCHAR},
			#{salesMng},
			#{prjctCd},
			#{makrCd},
			#{whCd, jdbcType=VARCHAR},
			#{mngTel},
			#{dlvrDttm, jdbcType=VARCHAR},
			#{dirtrsYn, jdbcType=VARCHAR},
			#{prdtDiv,  jdbcType=VARCHAR},
			#{prdtStkn, jdbcType=VARCHAR},
			#{prdtSize, jdbcType=VARCHAR},
			#{prdtUnit, jdbcType=VARCHAR},
			#{prdtUpr,  jdbcType=VARCHAR},
			NULL,
			#{pchsUpr, jdbcType=VARCHAR},
			#{sellUpr, jdbcType=VARCHAR},
			#{trstQty, jdbcType=VARCHAR},
			#{trstWt,  jdbcType=VARCHAR},
			#{trstUpr, jdbcType=VARCHAR},
			#{trstAmt, jdbcType=VARCHAR},
			#{realTrstQty, jdbcType=VARCHAR},
			#{realTrstWt,  jdbcType=VARCHAR},
			#{realTrstUpr, jdbcType=VARCHAR},
			#{realTrstAmt, jdbcType=VARCHAR},
			#{bilgQty,   jdbcType=VARCHAR},
			#{bilgWt,    jdbcType=VARCHAR},
			#{bilgUpr,   jdbcType=VARCHAR},
			#{bilgAmt,   jdbcType=VARCHAR},
			NVL(#{trstDcAmt, jdbcType=VARCHAR}, 0),
			NVL(#{etcAmt,  	 jdbcType=VARCHAR}, 0),
			#{trspRmk,   	 jdbcType=VARCHAR},
			NVL(#{transAmt,  jdbcType=VARCHAR}, 0),
			#{shipVehNo, jdbcType=VARCHAR},
			#{clntNm,    jdbcType=VARCHAR},
			NULL,
			NULL,
			'ERP',
			NULL,
			NULL,
			NULL,
			#{userId},
			#{pgmId},
			SYSDATE,
			#{userId},
			#{pgmId},
			SYSDATE,
	        #{salesAreaCd, jdbcType=VARCHAR},
	        #{siteCd,      jdbcType=VARCHAR},
	        #{bilgVatAmt,  jdbcType=VARCHAR},
	        #{prdtSpec,    jdbcType=VARCHAR}
		)
	</insert>
	
	<select id="selectSellCount" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM TB_AR02M01
	 	WHERE SELPCH_CD = #{selpchCd}
		<if test="coCd != null and !coCd.equals('')">
			AND CO_CD = #{coCd}				
		</if>
	 	<if test="reqDtFrom != null and !reqDtFrom.equals('')">
			AND TRST_DT BETWEEN #{reqDtFrom} AND #{reqDtTo}		
		</if>
	 	<if test="clntNm != null and !clntNm.equals('')">
			AND CLNT_NM LIKE '%${clntNm}%'				
		</if>
	 	<if test="prdtDiv != null and !prdtDiv.equals('')">
			AND PRDT_DIV = #{prdtDiv}				
		</if>
	 	<if test="estCoprt != null and !estCoprt.equals('')">
			AND TAXIVC_COPRT = #{estCoprt}				
		</if>
	 	<if test="dirtrsYn != null and !dirtrsYn.equals('')">
			AND DIRTRS_YN = #{dirtrsYn}				
		</if>
	 	<if test="typCd != null and !typCd.equals('')">
			AND TYP_CD = #{typCd}				
		</if>
		<if test="prjctCd != null and !prjctCd.equals('')">
			AND PRJCT_CD = #{prjctCd}				
		</if>
		<if test="pdsk != null and !pdsk.equals('')">
			AND PRDT_STKN = #{pdsk}				
		</if>
		<if test="bilgYn != null and bilgYn.equals('Y')">
			AND BILG_CERT_NO IS NOT NULL 		
		</if>
		<if test="bilgYn != null and bilgYn.equals('N')">
			AND BILG_CERT_NO IS NULL 		
		</if>
	</select>
	
	<select id="selectSellList" parameterType="Map" resultType="CamelMap">
		SELECT * FROM (
			SELECT 
				ROWNUM RNUM,
				CO_CD,
		        TRST_CERTI_NO,
		        SELPCH_CD,
		        FN_CM05M01_CD_TO_NM(SELPCH_CD) AS SELPCH_NM,
		        TAXIVC_COPRT,
		        FN_CM05M01_CD_TO_NM(TAXIVC_COPRT) AS TAXIVC_COPRT_NM,
		        TO_CHAR(TO_DATE(TRST_DT), 'YYYY-MM-DD') AS TRST_DT,
		        TRST_CLNT_CD,
		        TRST_CLNT_CD AS CLNT_CD,
		        TRST_PRDT_CD,
		        (SELECT PRDT_NM FROM TB_BM01M01 WHERE PRDT_CD = T.TRST_PRDT_CD) AS PRDT_NM,
		        OWNER_CD,
		        FN_CM05M01_CD_TO_NM(OWNER_CD) AS OWNER_NM,
		        IMP_YN,
		        TYP_CD,
		        FN_CM05M01_CD_TO_NM(TYP_CD) AS TYP_NM,
		        TRSP_TYP_CD,
		         FN_CM05M01_CD_TO_NM(TRSP_TYP_CD) AS TRSP_TYP_NM,
		        TRST_RPRC_SEQ,
		        TRST_DTL_SEQ,
		        PRDT_LEN,
		        ODR_NO,
		        SALES_MNG,
		        PRJCT_CD,
		        (SELECT PRJCT_NM FROM TB_SD05M01 WHERE PRJCT_CD = T.PRJCT_CD) AS PRJCT_NM,
		        MAKR_CD,
		        FN_CM05M01_CD_TO_NM(MAKR_CD) AS MAKR_NM,
		        WH_CD,
		        FN_CM05M01_CD_TO_NM(WH_CD) AS WH_NM,
		        MNG_TEL,
		        TO_CHAR(DLVR_DTTM, 'YYYY-MM-DD') AS DLVR_DTTM,
		        DIRTRS_YN,
		        PRDT_DIV,
		        PRDT_STKN,
		        FN_CM05M01_CD_TO_NM(PRDT_STKN) AS PRDT_STKN_NM,
		        PRDT_SIZE,
		        NVL(FN_CM05M01_CD_TO_NM(PRDT_SIZE), PRDT_SIZE) AS PRDT_SIZE_NM,
		        PRDT_UNIT,
		        PRDT_UPR,
		        STOCK_UPR,
		        PCHS_UPR,
		        SELL_UPR,
		        TRST_QTY,
		        TRST_WT,
		        TRST_UPR,
		        TRST_AMT,
		        REAL_TRST_QTY,
		        REAL_TRST_WT,
		        REAL_TRST_UPR,
		        REAL_TRST_AMT,
		        BILG_QTY,
		        BILG_WT,
		        BILG_UPR,
		        BILG_AMT,
		        NVL(TRST_DC_AMT, '0') AS TRST_DC_AMT,
		        NVL(ETC_AMT, '0') AS ETC_AMT,
		        TRSP_RMK,
		        NVL(TRANS_AMT, '0') AS TRANS_AMT,
		        SHIP_VEH_NO,
		        CLNT_NM,
		        BILG_CERT_NO,
		        CASE WHEN BILG_CERT_NO IS NOT NULL THEN 'Y' ELSE 'N' END BILG_YN,
		        CASE WHEN BILG_AMT &lt; 0 THEN 'Y' ELSE 'N' END RETURN_YN,
		        NVL(LOSS_RATE, '0') AS LOSS_RATE,
		        ODR_CREAT_DIV,
		        ETC_FIELD1,
		        ETC_FIELD2,
		        ETC_FIELD3,
		        CREAT_ID,
		        CREAT_PGM,
		        TO_CHAR(CREAT_DTTM, 'yyyy-MM-dd') AS CREAT_DTTM,
		        UDT_ID,
		        UDT_PGM,
		        TO_CHAR(UDT_DTTM, 'yyyy-MM-dd') AS UDT_DTTM,
		        SALES_AREA_CD,
		        SITE_CD,
		        (SELECT SITE_NM FROM TB_SD09M01 WHERE SITE_CD = T.SITE_CD) AS SITE_NM,
		        BILG_VAT_AMT,
		        BILG_VAT_AMT + BILG_AMT AS TOT_AMT, 
		        PRDT_SPEC
			FROM 
			(
			 	SELECT T.* FROM TB_AR02M01 T
			 	LEFT OUTER JOIN TB_SD09M01 SM09
			 	          ON  T.CO_CD = SM09.CO_CD  AND T.SITE_CD = SM09.SITE_CD
			 	WHERE SELPCH_CD = #{selpchCd}
				<if test="coCd != null and !coCd.equals('')">
					AND T.CO_CD = #{coCd}				
				</if>
			 	<if test="reqDtFrom != null and !reqDtFrom.equals('')">
					AND TRST_DT BETWEEN #{reqDtFrom} AND #{reqDtTo}		
				</if>
				<if test="clntCd != null and !clntCd.equals('')">
					AND CLNT_CD = #{clntCd}
				</if>
			 	<if test="clntNm != null and !clntNm.equals('')">
					AND CLNT_NM LIKE '%${clntNm}%'
				</if>
			 	<if test="prdtDiv != null and !prdtDiv.equals('')">
					AND PRDT_DIV = #{prdtDiv}				
				</if>
			 	<if test="estCoprt != null and !estCoprt.equals('')">
					AND TAXIVC_COPRT = #{estCoprt}				
				</if>
			 	<if test="dirtrsYn != null and !dirtrsYn.equals('')">
					AND DIRTRS_YN = #{dirtrsYn}				
				</if>
			 	<if test="typCd != null and !typCd.equals('')">
					AND TYP_CD = #{typCd}				
				</if>
				<if test="prjctCd != null and !prjctCd.equals('')">
					AND T.PRJCT_CD = #{prjctCd}				
				</if>
				<if test="siteCd != null and !siteCd.equals('')">
					AND T.SITE_CD = #{siteCd}				
				</if>
				<if test="siteNm != null and !siteNm.equals('')">
					AND SM09.SITE_NM like '%'|| #{siteNm} || '%'				
				</if>
				<if test="pdsk != null and !pdsk.equals('')">
					AND PRDT_STKN = #{pdsk}				
				</if>
				<if test='bilgYn == "Y"'>
					AND BILG_CERT_NO IS NOT NULL 		
				</if>
				<if test='bilgYn == "N"'>
					AND BILG_CERT_NO IS NULL 		
				</if>
				ORDER BY CLNT_NM, TRST_DT, TYP_CD, TRST_PRDT_CD, PRDT_STKN, PRDT_SIZE, PRDT_LEN
			) T
		)
		<!-- WHERE RNUM BETWEEN ${firstIndex} AND ${lastIndex} -->
	</select>
	
	<select id="selectSellMainList" parameterType="Map" resultType="CamelMap">
		SELECT ROWNUM AS RNUM, A.* FROM (
			SELECT
				CO_CD,
		        TAXIVC_COPRT,
		        FN_CM05M01_CD_TO_NM(TAXIVC_COPRT) AS TAXIVC_COPRT_NM,
		        TYP_CD,
		        FN_CM05M01_CD_TO_NM(TYP_CD) AS TYP_NM,
		        SUM(BILG_QTY) BILG_QTY,
		        SUM(BILG_WT) BILG_WT,
		        SUM(BILG_UPR) BILG_UPR,
		        SUM(BILG_AMT) BILG_AMT,
		        NVL(SUM(ETC_AMT), '0') AS ETC_AMT,
		        NVL(SUM(TRANS_AMT), '0') AS TRANS_AMT,
		        NVL(SUM(TRST_DC_AMT), '0') AS TRST_DC_AMT,
		        CLNT_NM,
		        SITE_CD,
		        (SELECT SITE_NM FROM TB_SD09M01 WHERE SITE_CD = T.SITE_CD) AS SITE_NM,
		        SUM(BILG_VAT_AMT) BILG_VAT_AMT,
		        SUM(BILG_VAT_AMT) + SUM(BILG_AMT) AS TOT_AMT
		    FROM
			(
			 	SELECT T.* FROM TB_AR02M01 T
			 	LEFT OUTER JOIN TB_SD09M01 SM09
			 	          ON  T.CO_CD = SM09.CO_CD  AND T.SITE_CD = SM09.SITE_CD
			 	WHERE SELPCH_CD = #{selpchCd}
				<if test="coCd != null and !coCd.equals('')">
					AND T.CO_CD = #{coCd}				
				</if>
			 	<if test="reqDtFrom != null and !reqDtFrom.equals('')">
					AND TRST_DT BETWEEN #{reqDtFrom} AND #{reqDtTo}		
				</if>
			 	<if test="clntNm != null and !clntNm.equals('')">
					AND CLNT_NM LIKE '%${clntNm}%'
				</if>
			 	<if test="prdtDiv != null and !prdtDiv.equals('')">
					AND PRDT_DIV = #{prdtDiv}				
				</if>
			 	<if test="estCoprt != null and !estCoprt.equals('')">
					AND TAXIVC_COPRT = #{estCoprt}				
				</if>
			 	<if test="dirtrsYn != null and !dirtrsYn.equals('')">
					AND DIRTRS_YN = #{dirtrsYn}				
				</if>
			 	<if test="typCd != null and !typCd.equals('')">
					AND TYP_CD = #{typCd}				
				</if>
				<if test="prjctCd != null and !prjctCd.equals('')">
					AND T.PRJCT_CD = #{prjctCd}				
				</if>
				<if test="siteCd != null and !siteCd.equals('')">
					AND T.SITE_CD = #{siteCd}				
				</if>
				<if test="siteNm != null and !siteNm.equals('')">
					AND SM09.SITE_NM like '%'|| #{siteNm} || '%'				
				</if>
				<if test="pdsk != null and !pdsk.equals('')">
					AND PRDT_STKN = #{pdsk}				
				</if>
				<if test='bilgYn == "Y"'>
					AND BILG_CERT_NO IS NOT NULL 		
				</if>
				<if test='bilgYn == "N"'>
					AND BILG_CERT_NO IS NULL 		
				</if>
				ORDER BY CLNT_NM, TYP_CD
			) T
			GROUP BY T.CO_CD, TAXIVC_COPRT, TYP_CD, CLNT_NM, SITE_CD
		) A
	</select>
	
	<update id="updatePchsSell" parameterType="Map">
		UPDATE TB_AR02M01
		SET
	        BILG_QTY        = #{bilgQty},
	        BILG_WT         = #{bilgWt},
	        BILG_UPR        = #{bilgUpr},
	        BILG_AMT        = #{bilgAmt},
	        BILG_VAT_AMT    = #{bilgVatAmt},
	        TRST_DC_AMT     = #{trstDcAmt},
	        ETC_AMT         = #{etcAmt},
	        TRSP_RMK    	= #{trspRmk, jdbcType=VARCHAR},
	        TRANS_AMT       = #{transAmt},
			SHIP_VEH_NO 	= #{shipVehNo, jdbcType=VARCHAR},
	        LOSS_RATE       = #{lossRate},
	        ODR_CREAT_DIV   = 'ERP',
	        UDT_ID          = #{userId},
	        UDT_PGM         = #{pgmId},
	        UDT_DTTM        = SYSDATE
		WHERE TRST_CERTI_NO = #{trstCertiNo}
	</update>
	
	<delete id="deleteSell" parameterType="Map">
		DELETE FROM TB_AR02M01
		WHERE TRST_CERTI_NO = #{trstCertiNo}
	</delete>
	
	<delete id="deletePchsSell" parameterType="Map">
		DELETE FROM TB_AR02M01
		WHERE TRST_RPRC_SEQ = #{trstRprcSeq}
		  AND TRST_DTL_SEQ = #{trstDtlSeq}
		  AND CREAT_PGM = #{pgmId}
	</delete>
	
	<select id="checkBilg" parameterType="Map" resultType="CamelMap">
		SELECT NVL(BILG_CERT_NO, 0) AS BILG_CERT_NO 
		FROM TB_AR02M01
		WHERE TRST_RPRC_SEQ = #{trstRprcSeq}
		  AND TRST_DTL_SEQ = #{trstDtlSeq}
		  AND CREAT_PGM = #{pgmId}
	</select>
	
	<select id="selectSellInfo" parameterType="Map" resultType="CamelMap">
		SELECT 
			CO_CD,
	        TRST_CERTI_NO,
	        SELPCH_CD,
	        FN_CM05M01_CD_TO_NM(SELPCH_CD) AS SELPCH_NM,
	        TAXIVC_COPRT,
	        TAXIVC_COPRT AS EST_COPRT,
	        FN_CM05M01_CD_TO_NM(TAXIVC_COPRT) AS TAXIVC_COPRT_NM,
	        TO_CHAR(TO_DATE(TRST_DT), 'YYYY-MM-DD') AS TRST_DT,
	        TRST_CLNT_CD,
	        TRST_CLNT_CD AS CLNT_CD,
	        TRST_PRDT_CD,
	        TRST_PRDT_CD AS PRDT_CD,
	        (SELECT PRDT_NM FROM TB_BM01M01 WHERE PRDT_CD = T.TRST_PRDT_CD) AS PRDT_NM,
	        OWNER_CD,
	        FN_CM05M01_CD_TO_NM(OWNER_CD) AS OWNER_NM,
	        IMP_YN,
	        TYP_CD,
	        FN_CM05M01_CD_TO_NM(TYP_CD) AS TYP_NM,
	        TRSP_TYP_CD,
		    FN_CM05M01_CD_TO_NM(TRSP_TYP_CD) AS TRSP_TYP_NM,
	        TRST_RPRC_SEQ,
	        TRST_DTL_SEQ,
	        PRDT_LEN,
	        ODR_NO,
	        SALES_MNG,
	        (SELECT NAME FROM TB_CM06M01 WHERE ID = T.SALES_MNG) AS SALES_MNG_NM,
	        PRJCT_CD,
	        (SELECT PRJCT_NM FROM TB_SD05M01 WHERE PRJCT_CD = T.PRJCT_CD) AS PRJCT_NM,
	        MAKR_CD,
	        FN_CM05M01_CD_TO_NM(MAKR_CD) AS MAKR_NM,
	        WH_CD,
	        FN_CM05M01_CD_TO_NM(WH_CD) AS WH_NM,
	        MNG_TEL,
	        TO_CHAR(DLVR_DTTM, 'YYYY-MM-DD') AS DLVR_DTTM,
	        DIRTRS_YN,
	        PRDT_DIV,
	        FN_CM05M01_CD_TO_NM(PRDT_DIV) AS PRDT_DIV_NM,
	        PRDT_STKN,
	        FN_CM05M01_CD_TO_NM(PRDT_STKN) AS PRDT_STKN_NM,
	        PRDT_SIZE,
	        NVL(FN_CM05M01_CD_TO_NM(PRDT_SIZE), PRDT_SIZE) AS PRDT_SIZE_NM,
	        PRDT_UNIT,
	        FN_CM05M01_CD_TO_NM(PRDT_UNIT) AS PRDT_UNIT_NM,
	        PRDT_UPR,
	        STOCK_UPR,
	        PCHS_UPR,
	        SELL_UPR,
	        TRST_QTY,
	        TRST_WT,
	        TRST_UPR,
	        TRST_AMT,
	        REAL_TRST_QTY,
	        REAL_TRST_WT,
	        REAL_TRST_UPR,
	        REAL_TRST_AMT,
	        BILG_QTY,
	        BILG_WT,
	        BILG_UPR,
	        BILG_AMT,
	        NVL(TRST_DC_AMT, '0') AS TRST_DC_AMT,
	        NVL(ETC_AMT, '0') AS ETC_AMT,
	        TRSP_RMK,
	        NVL(TRANS_AMT, '0') AS TRANS_AMT,
	        SHIP_VEH_NO,
	        CLNT_NM,
	        BILG_CERT_NO,
	        CASE WHEN BILG_CERT_NO IS NOT NULL THEN 'Y' ELSE 'N' END BILG_YN,
	        NVL(LOSS_RATE, '0') AS LOSS_RATE,
	        ODR_CREAT_DIV,
	        ETC_FIELD1,
	        ETC_FIELD2,
	        ETC_FIELD3,
	        CREAT_ID,
	        CREAT_PGM,
	        TO_CHAR(CREAT_DTTM, 'yyyy-MM-dd') AS CREAT_DTTM,
	        UDT_ID,
	        UDT_PGM,
	        TO_CHAR(UDT_DTTM, 'yyyy-MM-dd') AS UDT_DTTM,
	        SALES_AREA_CD,
	        SITE_CD,
		    (SELECT SITE_NM FROM TB_SD09M01 WHERE SITE_CD = T.SITE_CD) AS SITE_NM,
	        BILG_VAT_AMT,
	        PRDT_SPEC
		FROM TB_AR02M01 T
		WHERE TRST_CERTI_NO = #{trstCertiNo}
	</select>
	
	<select id="selectBilgInfo" parameterType="Map" resultType="CamelMap">
		SELECT 
			 T1.*,
			 NVL(SELL_PAY_DIV_CD, 'PAYDIV01') AS RFF_CNO,
			 B.CRN AS TAXIVC_COPRT_NO,
			 B.REPST_NM AS TAXIVC_COPRT_CEO,
			 B.CLNT_NM AS TAXIVC_COPRT_NM,
			 NVL(B.BIZCON_NM, '-') AS TAX_COPRT_BIZCON,	        
			 NVL(B.BSTY_NM, '-') AS TAXVIC_COPRT_BSTY,
			 (SELECT CRN FROM TB_BM02M01 WHERE CLNT_CD = T1.CLNT_CD) AS TAXIVC_RCV_CRN,
			 (SELECT REPST_NM FROM TB_BM02M01 WHERE CLNT_CD = T1.CLNT_CD) AS TAXIVC_RCV_CEO,
			 (SELECT BIZ_ADDR || ' ' ||BIZ_ADDR_DTL FROM TB_BM02M01 WHERE CLNT_CD = T1.CLNT_CD) AS TAXIVC_RCV_ADDR,
			 (SELECT BIZCON_NM FROM TB_BM02M01 WHERE CLNT_CD = T1.CLNT_CD) AS TAXIVC_RCV_BIZCON,
			 (SELECT BSTY_NM FROM TB_BM02M01 WHERE CLNT_CD = T1.CLNT_CD) AS TAXIVC_RCV_BSTY,
			 '1' AS COMII_EM,
			 B.BIZ_TEL_NO AS COMII_TE,
			 B.BIZ_FAX_NO AS COMII_FX,	        
			 '01' AS CTAIV_BJ_1
		FROM (
			SELECT 
				CO_CD,
		        TAXIVC_COPRT AS TAXIVC_COPRT_CD,
		        (SELECT CODE_ETC FROM TB_CM05M01 WHERE CODE_ID = TAXIVC_COPRT) AS TAXIVC_COPRT,
		        TRST_CLNT_CD AS CLNT_CD,
		        CLNT_NM,
		        SELPCH_CD,	        
		        SUM(TRST_QTY) AS TRST_QTY,
		        NVL(SUM(TRST_WT), 0) AS TRST_WT,
		        SUM(TRST_UPR) AS TRST_UPR,
		        SUM(TRST_AMT) AS TRST_AMT,
		        SUM(REAL_TRST_QTY) AS REAL_TRST_QTY,
		        SUM(REAL_TRST_WT) AS REAL_TRST_WT,
		        SUM(REAL_TRST_UPR) AS REAL_TRST_UPR,
		        SUM(REAL_TRST_AMT) AS REAL_TRST_AMT,
		        SUM(BILG_QTY) AS BILG_QTY,
		        SUM(BILG_WT) AS BILG_WT,
		        SUM(BILG_UPR) AS BILG_UPR,
		        SUM(BILG_AMT) AS BILG_AMT,
		        SUM(TRST_DC_AMT) AS TRST_DC_AMT,
				SUM(ETC_AMT) AS ETC_AMT,
				SUM(TRANS_AMT) AS TRANS_AMT,
				COUNT(*) AS TAX_DMS5_7240,
		        SUM(BILG_AMT) AS TAX_MOA5_23,
		        TRUNC(SUM(BILG_AMT)*0.1) AS TAX_MOA5_124,
		        SUM(BILG_AMT) + TRUNC(SUM(BILG_AMT)*0.1) AS TAX_MOA5_388,
		        CASE WHEN SELPCH_CD = 'SELPCH2' THEN 'PAYDIV01' ELSE 'PAYDIV02' END RFF_VA,
		        'RFFGN101' AS RFF_GN1,
		        'RFFGN201' AS RFF_GN2,
		        '' AS RFF_AEA,
		        'BGM12259' AS BGM_1225,
		        '1' AS BGM_4343,
		        'S' AS XML_FLOW,
		        #{userId} AS TAX_CREAT_ID,
		        #{userNm} AS TAX_CREAT_NM
			FROM TB_AR02M01 T
			WHERE TRST_CERTI_NO IN
			<foreach item="item" index="index" collection="list" open="(" close=")" separator=",">
				#{item}
			</foreach>
			GROUP BY CO_CD, TAXIVC_COPRT, TRST_CLNT_CD, SELPCH_CD, CLNT_NM
		) T1 
		INNER JOIN TB_BM02M01 B ON T1.TAXIVC_COPRT = B.CLNT_CD
	</select>
	
	<select id="selectBilgInfoUpdate" parameterType="Map" resultType="CamelMap">
		SELECT 
			CO_CD,
	        TAXIVC_COPRT AS TAXIVC_COPRT_CD,
	        (SELECT CODE_ETC FROM TB_CM05M01 WHERE CODE_ID = TAXIVC_COPRT) AS TAXIVC_COPRT,
	        TRST_CLNT_CD AS CLNT_CD,
	        CLNT_NM,
	        SELPCH_CD,	        
	        SUM(TRST_QTY) AS TRST_QTY,
	        NVL(SUM(TRST_WT), 0) AS TRST_WT,
	        SUM(TRST_UPR) AS TRST_UPR,
	        SUM(TRST_AMT) AS TRST_AMT,
	        SUM(REAL_TRST_QTY) AS REAL_TRST_QTY,
	        SUM(REAL_TRST_WT) AS REAL_TRST_WT,
	        SUM(REAL_TRST_UPR) AS REAL_TRST_UPR,
	        SUM(REAL_TRST_AMT) AS REAL_TRST_AMT,
	        SUM(BILG_QTY) AS BILG_QTY,
	        SUM(BILG_WT) AS BILG_WT,
	        SUM(BILG_UPR) AS BILG_UPR,
	        SUM(BILG_AMT) AS BILG_AMT,
	        SUM(TRST_DC_AMT) AS TRST_DC_AMT,
			SUM(ETC_AMT) AS ETC_AMT,
			SUM(TRANS_AMT) AS TRANS_AMT,
			COUNT(*) AS TAX_DMS5_7240,
	        SUM(BILG_AMT) AS TAX_MOA5_23,
	        SUM(BILG_AMT)*0.1 AS TAX_MOA5_124,
	        SUM(BILG_AMT) + SUM(BILG_AMT)*0.1 AS TAX_MOA5_388,
	        CASE WHEN SELPCH_CD = 'SELPCH2' THEN 'PAYDIV01' ELSE 'PAYDIV02' END RFF_VA,
	        'RFFGN101' AS RFF_GN1,
	        'RFFGN201' AS RFF_GN2,
	        '' AS RFF_AEA,
	        'BGM12259' AS BGM_1225,
	        '1' AS BGM_4343,
	        'S' AS XML_FLOW,
	        #{bilgCertNo} AS BILG_CERT_NO,
	        #{userId} AS TAX_CREAT_ID,
	        #{userNm} AS TAX_CREAT_NM
		FROM TB_AR02M01 T
		WHERE BILG_CERT_NO = #{bilgCertNo}
		GROUP BY CO_CD, TAXIVC_COPRT, TRST_CLNT_CD, SELPCH_CD, CLNT_NM
	</select>
	
	<update id="updatePchsSellBilg" parameterType="Map">
		UPDATE TB_AR02M01
		SET BILG_CERT_NO = #{bilgCertNo}
		WHERE TRST_CERTI_NO = #{trstCertiNo}
	</update>
	
	<update id="updateBilgCancel" parameterType="Map">
		UPDATE TB_AR02M01
		SET BILG_CERT_NO = ''
		WHERE BILG_CERT_NO = #{bilgCertNo}
	</update>
	
    <select id="callCreditLoan" parameterType="Map" resultType="long">
    	SELECT F_CREDIT_LOAN(#{loanCd}, #{clntCd}, #{coCd}, #{iTrDt}, #{amt}) FROM DUAL
    </select>
	
    <select id="selectSellSumList" parameterType="Map" resultType="CamelMap">
	    SELECT 		
			FN_CM05M01_CD_TO_NM(B.PRDT_DIV) AS PRDT_DIV_NM,
			FN_CM05M01_CD_TO_NM(B.PRDT_STKN) AS PRDT_STKN_NM,
			A.TRST_PRDT_CD,
			B.PRDT_NM,
			CASE WHEN IMP_YN = 'Y' THEN '수입' ELSE '국산' END IMP_YN,
			FN_CM05M01_CD_TO_NM(MAKR_CD) AS MAKR_NM,
			B.PRDT_SPEC,
			A.PRDT_LEN,
			SUM(BILG_QTY) BILG_QTY,
			SUM(BILG_WT) BILG_WT,
		    AVG(BILG_UPR) BILG_UPR,
		    SUM(BILG_AMT) BILG_AMT,
		    SUM(BILG_VAT_AMT) TAX_AMT
		FROM TB_AR02M01 A INNER JOIN TB_BM01M01 B ON A.TRST_PRDT_CD = B.PRDT_CD
		WHERE SELPCH_CD = #{selpchCd}
		<if test="coCd != null and !coCd.equals('')">
			AND CO_CD = #{coCd}				
		</if>
		<if test="reqDtFrom != null and !reqDtFrom.equals('')">
			AND TRST_DT BETWEEN #{reqDtFrom} AND #{reqDtTo}		
		</if>
		<if test="prdtDiv != null and !prdtDiv.equals('')">
			AND B.PRDT_DIV = #{prdtDiv}				
		</if>
		<if test="clntCd != null and !clntCd.equals('')">
			AND TRST_CLNT_CD = #{clntCd}				
		</if>
		<if test="prjctCd != null and !prjctCd.equals('')">
			AND PRJCT_CD = #{prjctCd}
		</if>
		<if test='bilgYn == "Y"'>
			AND BILG_CERT_NO IS NOT NULL 		
		</if>
		<if test='bilgYn == "N"'>
			AND BILG_CERT_NO IS NULL 		
		</if>
		<if test="typCd != null and !typCd.equals('')">
			AND TYP_CD = #{typCd}
		</if>
		GROUP BY B.PRDT_DIV, B.PRDT_NM, A.TRST_PRDT_CD, B.PRDT_STKN, IMP_YN, MAKR_CD, B.PRDT_SPEC, A.PRDT_LEN
		ORDER BY B.PRDT_DIV, B.PRDT_NM, A.TRST_PRDT_CD, B.PRDT_STKN, IMP_YN, MAKR_CD, B.PRDT_SPEC, A.PRDT_LEN
    </select>
	
	<select id="selectOwner1ClntCd" parameterType="Map" resultType="String">
		SELECT 
		(
			SELECT CODE_ETC FROM TB_CM05M01 WHERE CODE_ID = (SELECT CODE_ETC FROM TB_CM05M01 WHERE CODE_ID = #{whCd})
		) AS WH_CLNT_CD FROM DUAL	
	</select>
	
	<select id="selectBilgVatAmt" parameterType="Map" resultType="long">
		<if test='selpchCd == "SELPCH1" or selpchCd == "SELPCH3"'>
	        SELECT 
	        	TRUNC(${realTrstAmt} / 100 * NVL((SELECT A.CODE_ETC 
	        FROM TB_CM05M01 A 
	            INNER JOIN TB_CM05M01 A1 ON A1.CODE_ID = #{whCd, jdbcType=VARCHAR}
	            INNER JOIN TB_CM05M01 A2 ON A2.CODE_ID = A1.CODE_ETC
	            INNER JOIN TB_BM02M01 B ON A.CODE_ID = B.PCHS_VAT_CD AND B.CLNT_CD = A2.CODE_ETC),10)) AS BILG_VAT_AMT
	        FROM DUAL
        </if>
        <if test='selpchCd == "SELPCH2" or selpchCd == "SELPCH4"'>
	        SELECT 
	        	TRUNC(${realTrstAmt} / 100 * NVL((SELECT CODE_ETC FROM TB_CM05M01 A 
	        	INNER JOIN TB_BM02M01 B ON A.CODE_ID = B.SELL_VAT_CD AND B.CLNT_CD = #{clntCd}),10)) AS BILG_VAT_AMT
	        FROM DUAL
        </if>
	</select>
	
</mapper>