<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.fi.fi02.mapper.FI02Mapper">
	
	<select id="selectPalBillCount" resultType="int">
	SELECT 
 		COUNT(*) 
	  FROM TB_FI02M01 T
		 	<where>
		 	<if test="coCd != null and coCd != ''">
		 	AND CO_CD = #{coCd}
		 	</if>
		 	<if test="prftYm != null and prftYm != ''">
		 	AND PRFT_YM = REPLACE(#{prftYm}, '-', '')
		 	</if>				 	
		 	</where>
	</select>
	
	<select id="selectPalBillList" resultType="CamelMap">
	SELECT
		*
	FROM
	(
		SELECT
			ROWNUM AS RNUM, A.*
		FROM
		(
			SELECT CO_CD
				 , FN_CM05M01_CD_TO_NM(T.CO_CD) AS CO_NM
				 , TO_CHAR(TO_DATE(PRFT_YM, 'YYYYMM'), 'YYYY-MM') PRFT_YM
				 , BASE_DEPT
				 , UPPER_DEPT
				 , LAST_DEPT
				 , SELL_AMT
				 , SELL_PRFT_AMT
				 , SELL_MNG_AMT
				 , SALES_PRFT_AMT
				 , BFRX_PRFT_AMT
				 , RMK
				 , CREAT_ID
			  FROM TB_FI02M01 T
			 	<where>
			 	<if test="coCd != null and coCd != ''">
			 	AND CO_CD = #{coCd}
			 	</if>
			 	<if test="prftYm != null and prftYm != ''">
			 	AND PRFT_YM = REPLACE(#{prftYm}, '-', '')
			 	</if>				 	
			 	</where>
			 ORDER BY PRFT_YM
		) A			
	)
	WHERE
			RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>
	
	<select id="selectBaseDept" resultType="CamelMap">
	SELECT BASE_DEPT as CD
	     , BASE_DEPT AS NM
	  FROM TB_FI01M01
	 WHERE CO_CD = #{coCd}
	 GROUP BY BASE_DEPT
	</select>
	
	<select id="selectUpperDept" resultType="CamelMap">
	SELECT UPPER_DEPT as CD
	     , UPPER_DEPT AS NM
	  FROM TB_FI01M01
	 WHERE CO_CD = #{coCd}
	 GROUP BY UPPER_DEPT
	</select>
	
	<select id="selecrLastDept" resultType="CamelMap">
	SELECT LAST_DEPT as CD
	     , LAST_DEPT AS NM
	  FROM TB_FI01M01
	 WHERE CO_CD = #{coCd}
	 GROUP BY LAST_DEPT
	</select>
	
	<select id="selectPalBillDetail" resultType="CamelMap">
	SELECT CO_CD
		 , FN_CM05M01_CD_TO_NM(T.CO_CD) AS CO_NM
		 , PRFT_YM
		 , BASE_DEPT
		 , UPPER_DEPT
		 , LAST_DEPT
		 , SELL_AMT
		 , SELL_PRFT_AMT
		 , SELL_MNG_AMT
		 , SALES_PRFT_AMT
		 , BFRX_PRFT_AMT
		 , RMK
	  FROM TB_FI02M01 T
	 	<where>
	 	<if test="coCd != null and coCd != ''">
	 	AND CO_CD = #{coCd}
	 	</if>
	 	<if test="prftYm != null and prftYm != ''">
	 	AND PRFT_YM = REPLACE(#{prftYm}, '-', '')
	 	</if>
	 	</where>
	</select>
	
	<select id="selectPrdtDeptDuplicate" resultType="int">
	SELECT COUNT(*)
	  FROM TB_FI02M01
	 WHERE CO_CD = #{coCd}
	 	AND PRFT_YM = REPLACE(#{prftYm}, '-', '')
	</select>
	
	<insert id="insertPalBill" parameterType="Map">
	INSERT INTO TB_FI02M01
	(
	CO_CD
	 , PRFT_YM
	 , BASE_DEPT
	 , UPPER_DEPT
	 , LAST_DEPT
	 , SELL_AMT
	 , SELL_PRFT_AMT
	 , SELL_MNG_AMT
	 , SALES_PRFT_AMT
	 , BFRX_PRFT_AMT
	 , RMK
	 , CREAT_ID
	 , CREAT_PGM
	 , CREAT_DTTM
	 ) VALUES (
	 #{coCd}
	 , REPLACE(#{prftYm}, '-', '')
	 , #{baseDept}
	 , #{upperDept}
	 , #{lastDept}
	 , #{sellAmt}
	 , #{sellPrftAmt}
	 , #{sellMngAmt}
	 , #{salesPrftAmt}
	 , #{bfrxPrftAmt}
	 , #{rmk}
	 , #{userId}
	 , #{pgmId}
	 , SYSDATE
	 )
	</insert>
	
	<update id="updatePalBill" parameterType="Map">
	UPDATE TB_FI02M01
	SET CO_CD = #{coCd}
	  , PRFT_YM = REPLACE(#{prftYm}, '-', '')
	  , BASE_DEPT = #{baseDept}
	  , UPPER_DEPT = #{upperDept}
	  , LAST_DEPT = #{lastDept}
	  , SELL_AMT = #{sellAmt}
	  , SELL_PRFT_AMT = #{sellPrftAmt}
	  , SELL_MNG_AMT = #{sellMngAmt}
	  , SALES_PRFT_AMT = #{salesPrftAmt}
	  , BFRX_PRFT_AMT = #{bfrxPrftAmt}
	  , RMK = #{rmk}
	  , UDT_ID = #{userId}
	  , UDT_PGM = #{pgmId}
	  , UDT_DTTM = SYSDATE
	WHERE CO_CD = #{coCd}
	  AND PRFT_YM = REPLACE(#{prftYm}, '-', '')
	</update>
	
	<delete id="deletePalBill" parameterType="Map">
	DELETE FROM TB_FI02M01 
	 WHERE CO_CD = #{coCd}
	  AND PRFT_YM = REPLACE(#{prftYm}, '-', '')
 	  <if test="baseDept != null and baseDept != ''">
	  AND BASE_DEPT = #{baseDept}
	  </if>
	</delete>
	
	<insert id="savePalBill" parameterType="Map">
	MERGE INTO TB_FI02M01
	USING DUAL
	ON (
		CO_CD = #{coCd}
	  	AND PRFT_YM = REPLACE(#{prftYm}, '-', '')
	  	AND BASE_DEPT = #{baseDept}
	)
	WHEN MATCHED THEN 
		UPDATE SET 
		  UPPER_DEPT = #{upperDept, jdbcType=VARCHAR}
		  , LAST_DEPT = #{lastDept, jdbcType=VARCHAR}
		  , SELL_AMT = TO_NUMBER(#{sellAmt, jdbcType=VARCHAR})
		  , SELL_PRFT_AMT = TO_NUMBER(#{sellPrftAmt, jdbcType=VARCHAR})
		  , SELL_MNG_AMT = TO_NUMBER(#{sellMngAmt, jdbcType=VARCHAR})
		  , SALES_PRFT_AMT = TO_NUMBER(#{salesPrftAmt, jdbcType=VARCHAR})
		  , BFRX_PRFT_AMT = TO_NUMBER(#{bfrxPrftAmt, jdbcType=VARCHAR})
		  , RMK = #{rmk, jdbcType=VARCHAR}
		  , UDT_ID = #{userId}
		  , UDT_PGM = #{pgmId}
		  , UDT_DTTM = SYSDATE
	WHEN NOT MATCHED THEN 
		INSERT 
		(
		CO_CD
		 , PRFT_YM
		 , BASE_DEPT
		 , UPPER_DEPT
		 , LAST_DEPT
		 , SELL_AMT
		 , SELL_PRFT_AMT
		 , SELL_MNG_AMT
		 , SALES_PRFT_AMT
		 , BFRX_PRFT_AMT
		 , RMK
		 , CREAT_ID
		 , CREAT_PGM
		 , CREAT_DTTM
		 ) VALUES (
		 #{coCd}
		 , REPLACE(#{prftYm}, '-', '')
		 , #{baseDept}
		 , #{upperDept, jdbcType=VARCHAR}
		 , #{lastDept, jdbcType=VARCHAR}
		 , TO_NUMBER(#{sellAmt, jdbcType=VARCHAR})
		 , TO_NUMBER(#{sellPrftAmt, jdbcType=VARCHAR})
		 , TO_NUMBER(#{sellMngAmt, jdbcType=VARCHAR})
		 , TO_NUMBER(#{salesPrftAmt, jdbcType=VARCHAR})
		 , TO_NUMBER(#{bfrxPrftAmt, jdbcType=VARCHAR})
		 , #{rmk, jdbcType=VARCHAR}
		 , #{userId}
		 , #{pgmId}
		 , SYSDATE
		 )
	</insert>
	
	<insert id="copyPrevMonth" parameterType="Map">
	INSERT INTO TB_FI02M01
	(
		CO_CD
		 , PRFT_YM
		 , BASE_DEPT
		 , UPPER_DEPT
		 , LAST_DEPT
		 , SELL_AMT
		 , SELL_PRFT_AMT
		 , SELL_MNG_AMT
		 , SALES_PRFT_AMT
		 , BFRX_PRFT_AMT
		 , RMK
		 , CREAT_ID
		 , CREAT_PGM
		 , CREAT_DTTM
	)
	SELECT #{coCd}
		 , REPLACE(#{prftYm}, '-', '')
		 , BASE_DEPT
		 , UPPER_DEPT
		 , LAST_DEPT
		 , SELL_AMT
		 , SELL_PRFT_AMT
		 , SELL_MNG_AMT
		 , SALES_PRFT_AMT
		 , BFRX_PRFT_AMT
		 , RMK
		 , #{userId}
		 , #{pgmId}
		 , CREAT_DTTM
	  FROM TB_FI02M01
	 WHERE CO_CD = #{coCd}
	  	AND PRFT_YM = TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(#{prftYm}, '-', ''), 'YYYYMM'), -1), 'YYYYMM')
	</insert>
	
	<select id="selectPalBillSalesPrft" parameterType="Map" resultType="CamelMap">
	WITH YM AS  (
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '01' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '02' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '03' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '04' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '05' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '06' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '07' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '08' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '09' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '10' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '11' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '12' AS PRFT_YM FROM DUAL 
	),
	CO AS (
	SELECT CODE_ID, SORT_NO FROM TB_CM05M01 WHERE CODE_KIND = 'CO' ORDER BY SORT_NO 
	)
	SELECT FN_CM05M01_CD_TO_NM(CODE_ID) AS CO_NM
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '01', SALES_PRFT_AMT)) AS "1"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '02', SALES_PRFT_AMT)) AS "2"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '03', SALES_PRFT_AMT)) AS "3"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '04', SALES_PRFT_AMT)) AS "4"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '05', SALES_PRFT_AMT)) AS "5"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '06', SALES_PRFT_AMT)) AS "6"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '07', SALES_PRFT_AMT)) AS "7"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '08', SALES_PRFT_AMT)) AS "8"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '09', SALES_PRFT_AMT)) AS "9"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '10', SALES_PRFT_AMT)) AS "10"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '11', SALES_PRFT_AMT)) AS "11"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '12', SALES_PRFT_AMT)) AS "12"
		 , sum(SALES_PRFT_AMT) AS tot
	FROM
		(SELECT A.CODE_ID
			  , A.PRFT_YM
			  , SORT_NO
			  , ROUND((DECODE(#{searchItem},
		  		        'S1', SUM(NVL(B.SALES_PRFT_AMT, 0)), 
		  		        'S2', SUM(NVL(B.SELL_AMT, 0)), 
		  		        'S3', SUM(NVL(B.SELL_PRFT_AMT, 0)), 
		  		        'S4', SUM(NVL(B.SELL_MNG_AMT, 0)), 
		  		        'S5', SUM(NVL(B.BFRX_PRFT_AMT, 0))) / TO_NUMBER(#{searchUnit1}))) SALES_PRFT_AMT
		FROM
		(SELECT CODE_ID, SORT_NO, PRFT_YM
		  FROM YM
		     , CO) A
		 ,TB_FI02M01 B
		 WHERE A.CODE_ID = B.CO_CD(+)
		   AND A.PRFT_YM = B.PRFT_YM(+)
		GROUP BY A.CODE_ID, A.PRFT_YM, SORT_NO
		ORDER BY PRFT_YM, SORT_NO)
	GROUP BY SORT_NO, FN_CM05M01_CD_TO_NM(CODE_ID)
	ORDER BY SORT_NO
	
	</select>
	
	<select id="selectPalBillSalesPrftChart" parameterType="Map" resultType="CamelMap">
	WITH YM AS  (
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '01' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '02' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '03' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '04' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '05' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '06' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '07' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '08' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '09' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '10' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '11' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '12' AS PRFT_YM FROM DUAL 
	),
	CO AS (
	SELECT CODE_ID, SORT_NO FROM TB_CM05M01 WHERE CODE_KIND = 'CO' ORDER BY SORT_NO 
	)
	SELECT SUBSTR(PRFT_YM, 0, 4) || '-' || SUBSTR(PRFT_YM, 5, 2) AS PRFT_YM
		 , SUM(NVL(DECODE(CODE_ID, 'GUM', SALES_PRFT_AMT), 0)) GUM
		 , SUM(NVL(DECODE(CODE_ID, 'GGM', SALES_PRFT_AMT), 0)) GGM
		 , SUM(NVL(DECODE(CODE_ID, 'GGS', SALES_PRFT_AMT), 0)) GGS
	FROM
		(SELECT A.CODE_ID, A.PRFT_YM, SORT_NO
			  , ROUND((DECODE(#{searchItem},
		  		        'S1', SUM(NVL(B.SALES_PRFT_AMT, 0)), 
		  		        'S2', SUM(NVL(B.SELL_AMT, 0)), 
		  		        'S3', SUM(NVL(B.SELL_PRFT_AMT, 0)), 
		  		        'S4', SUM(NVL(B.SELL_MNG_AMT, 0)), 
		  		        'S5', SUM(NVL(B.BFRX_PRFT_AMT, 0))) / TO_NUMBER(#{searchUnit1}))) SALES_PRFT_AMT
		FROM
		(SELECT CODE_ID, SORT_NO, PRFT_YM
		  FROM YM
		     , CO) A
		 ,TB_FI02M01 B
		 WHERE A.CODE_ID = B.CO_CD(+)
		   AND A.PRFT_YM = B.PRFT_YM(+)
		GROUP BY A.CODE_ID, A.PRFT_YM, SORT_NO
		ORDER BY PRFT_YM, SORT_NO)
GROUP BY PRFT_YM
HAVING sum(SALES_PRFT_AMT)>0
	</select>
	
	<select id="selectPalBillBfrxPrft" parameterType="Map" resultType="CamelMap">
	WITH YM AS  (
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '01' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '02' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '03' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '04' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '05' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '06' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '07' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '08' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '09' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '10' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '11' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '12' AS PRFT_YM FROM DUAL 
	),
	CO AS (
	SELECT CODE_ID, SORT_NO FROM TB_CM05M01 WHERE CODE_KIND = 'CO' ORDER BY SORT_NO 
	)
	SELECT SORT_NO, FN_CM05M01_CD_TO_NM(CODE_ID) AS CO_NM
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '01', BFRX_PRFT_AMT)) AS "1"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '02', BFRX_PRFT_AMT)) AS "2"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '03', BFRX_PRFT_AMT)) AS "3"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '04', BFRX_PRFT_AMT)) AS "4"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '05', BFRX_PRFT_AMT)) AS "5"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '06', BFRX_PRFT_AMT)) AS "6"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '07', BFRX_PRFT_AMT)) AS "7"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '08', BFRX_PRFT_AMT)) AS "8"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '09', BFRX_PRFT_AMT)) AS "9"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '10', BFRX_PRFT_AMT)) AS "10"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '11', BFRX_PRFT_AMT)) AS "11"
		 , MAX(DECODE(PRFT_YM, TO_CHAR(SYSDATE, 'YYYY') || '12', BFRX_PRFT_AMT)) AS "12"
		 , sum(BFRX_PRFT_AMT) AS tot
	FROM
		(SELECT A.CODE_ID, A.PRFT_YM, SORT_NO
			  , ROUND((DECODE(#{searchItem2},
		  		        'S1', SUM(NVL(B.SALES_PRFT_AMT, 0)), 
		  		        'S2', SUM(NVL(B.SELL_AMT, 0)), 
		  		        'S3', SUM(NVL(B.SELL_PRFT_AMT, 0)), 
		  		        'S4', SUM(NVL(B.SELL_MNG_AMT, 0)), 
		  		        'S5', SUM(NVL(B.BFRX_PRFT_AMT, 0))) / TO_NUMBER(#{searchUnit2}))) BFRX_PRFT_AMT
		FROM
		(SELECT CODE_ID, SORT_NO, PRFT_YM
		  FROM YM
		     , CO) A
		 ,TB_FI02M01 B
		 WHERE A.CODE_ID = B.CO_CD(+)
		   AND A.PRFT_YM = B.PRFT_YM(+)
		GROUP BY A.CODE_ID, A.PRFT_YM, SORT_NO
		ORDER BY PRFT_YM, SORT_NO)
	GROUP BY SORT_NO, FN_CM05M01_CD_TO_NM(CODE_ID)
	ORDER BY SORT_NO
	</select>
	
	<select id="selectPalBillBfrxPrftChart" parameterType="Map" resultType="CamelMap">
	WITH YM AS  (
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '01' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '02' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '03' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '04' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '05' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '06' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '07' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '08' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '09' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '10' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '11' AS PRFT_YM FROM DUAL 
	UNION ALL 
	SELECT TO_CHAR(SYSDATE, 'YYYY') || '12' AS PRFT_YM FROM DUAL 
	),
	CO AS (
	SELECT CODE_ID, SORT_NO FROM TB_CM05M01 WHERE CODE_KIND = 'CO' ORDER BY SORT_NO 
	)
	SELECT SUBSTR(PRFT_YM, 0, 4) || '-' || SUBSTR(PRFT_YM, 5, 2) AS PRFT_YM
		 , SUM(NVL(DECODE(CODE_ID, 'GUM', BFRX_PRFT_AMT), 0)) GUM
		 , SUM(NVL(DECODE(CODE_ID, 'GGM', BFRX_PRFT_AMT), 0)) GGM
		 , SUM(NVL(DECODE(CODE_ID, 'GGS', BFRX_PRFT_AMT), 0)) GGS
	FROM
		(SELECT A.CODE_ID, A.PRFT_YM, SORT_NO
			  , ROUND((DECODE(#{searchItem2},
		  		        'S1', SUM(NVL(B.SALES_PRFT_AMT, 0)), 
		  		        'S2', SUM(NVL(B.SELL_AMT, 0)), 
		  		        'S3', SUM(NVL(B.SELL_PRFT_AMT, 0)), 
		  		        'S4', SUM(NVL(B.SELL_MNG_AMT, 0)), 
		  		        'S5', SUM(NVL(B.BFRX_PRFT_AMT, 0))) / TO_NUMBER(#{searchUnit2}))) BFRX_PRFT_AMT
		FROM
		(SELECT CODE_ID, SORT_NO, PRFT_YM
		  FROM YM
		     , CO) A
		 ,TB_FI02M01 B
		 WHERE A.CODE_ID = B.CO_CD(+)
		   AND A.PRFT_YM = B.PRFT_YM(+)
		GROUP BY A.CODE_ID, A.PRFT_YM, SORT_NO
		ORDER BY PRFT_YM, SORT_NO)
GROUP BY PRFT_YM
HAVING sum(BFRX_PRFT_AMT)>0
	</select>
</mapper>