<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sm.sm01.mapper.SM01Mapper">

	<select id="selectStockListCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		FROM TB_SM01M01 A, TB_BM01M01 C, TB_BM02M01 E
		WHERE  A.PRDT_CD = C.PRDT_CD 
				AND A.CLNT_CD = E.CLNT_CD(+)
				<if test="coCd != null and !coCd.equals('')">
				AND A.CO_CD = #{coCd}
				</if>
				<if test="whCd != null and !whCd.equals('')">
				 		AND A.WH_CD = #{whCd}
				 </if>
				 <if test="ownerCd != null and !ownerCd.equals('')">
						AND A.OWNER_CD = #{ownerCd}
				</if>
				<if test="typCd != null and !typCd.equals('')">
						AND A.TYP_CD = #{typCd}
				</if>
				<if test="makrCd != null and !makrCd.equals('')">
						AND A.MAKR_CD = #{makrCd}
				</if>
				<if test="prdtNm != null and !prdtNm.equals('')">
						AND C.PRDT_NM LIKE '%' || #{prdtNm} || '%'
				</if>
				<if test="clntNm != null and !clntNm.equals('')">
						AND E.CLNT_NM LIKE '%' || #{clntNm} || '%'
				</if>
				
	</select>

	 <select id="selectStockList" parameterType="Map" resultType="CamelMap">
		SELECT *
		FROM (
			SELECT
				ROWNUM AS RNUM, D.*
			FROM(
				SELECT A.CO_CD
						, FN_CM05M01_CD_TO_NM(A.CO_CD) AS CO_NM
						, A.WH_CD
						, FN_CM05M01_CD_TO_NM(A.WH_CD) AS WH_NM
						, A.OWNER_CD
						, FN_CM05M01_CD_TO_NM(A.OWNER_CD) AS OWNER_NM
						, A.TYP_CD
						, FN_CM05M01_CD_TO_NM(A.TYP_CD) AS TYP_NM
						, A.MAKR_CD 
						, FN_CM05M01_CD_TO_NM(A.MAKR_CD) AS MAKR_NM
						, A.PRDT_CD
				     	, C.PRDT_NM
					    , A.IMP_YN
					    , FN_CM05M01_CD_TO_NM(A.IMP_YN) AS IMP_NM
					    , A.STOCK_CHG_CD
					    , FN_CM05M01_CD_TO_NM(A.STOCK_CHG_CD) AS STOCK_CHG_NM
						, A.STOCK_QTY
						, A.STOCK_UPR
						, (A.STOCK_QTY*A.STOCK_UPR) as STOCK_AMT
						, A.STD_UPR
						, A.PCHS_UPR 
						, A.SELL_UPR 
						, E.CLNT_NM
						, TO_CHAR(A.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM 
				FROM TB_SM01M01 A, TB_BM01M01 C, TB_BM02M01 E
				WHERE  A.PRDT_CD = C.PRDT_CD
				AND A.CLNT_CD = E.CLNT_CD(+)
				<if test="coCd != null and !coCd.equals('')">
						AND A.CO_CD = #{coCd}
						</if>
						<if test="whCd != null and !whCd.equals('')">
						 		AND A.WH_CD = #{whCd}
						 </if>
						 <if test="ownerCd != null and !ownerCd.equals('')">
								AND A.OWNER_CD = #{ownerCd}
						</if>
						<if test="typCd != null and !typCd.equals('')">
								AND A.TYP_CD = #{typCd}
						</if>
						<if test="makrCd != null and !makrCd.equals('')">
								AND A.MAKR_CD = #{makrCd}
						</if>
						<if test="prdtNm != null and !prdtNm.equals('')">
								AND C.PRDT_NM LIKE '%' || #{prdtNm} || '%'
						</if>
						<if test="clntNm != null and !clntNm.equals('')">
								AND E.CLNT_NM LIKE '%' || #{clntNm} || '%'
						</if>
						
				ORDER BY UDT_DTTM DESC
			)D
		)
		WHERE
			RNUM BETWEEN #{firstIndex} AND #{lastIndex} 
	</select>
	
	<select id="selectStockHistoryListCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		FROM TB_SM01H01 A, TB_BM01M01 C, TB_BM02M01 E
		WHERE  A.PRDT_CD = C.PRDT_CD AND A.CLNT_CD = E.CLNT_CD(+)
				<if test="coCd != null and !coCd.equals('')">
				AND A.CO_CD = #{coCd}
				</if>
				<if test="whCd != null and !whCd.equals('')">
				 		AND A.WH_CD = #{whCd}
				 </if>
				 <if test="ownerCd != null and !ownerCd.equals('')">
						AND A.OWNER_CD = #{ownerCd}
				</if>
				<if test="typCd != null and !typCd.equals('')">
						AND A.TYP_CD = #{typCd}
				</if>
				<if test="makrCd != null and !makrCd.equals('')">
						AND A.MAKR_CD = #{makrCd}
				</if>
				<if test="prdtNm != null and !prdtNm.equals('')">
						AND C.PRDT_NM LIKE '%' || #{prdtNm} || '%'
				</if>
				<if test="clntNm != null and !clntNm.equals('')">
						AND E.CLNT_NM LIKE '%' || #{clntNm} || '%'
				</if>
				
	</select>
	
	 <select id="selectStockHistoryList" parameterType="Map" resultType="CamelMap">
		SELECT *
		FROM (
			SELECT
				ROWNUM AS RNUM, D.*
			FROM(
				SELECT A.CO_CD
						, FN_CM05M01_CD_TO_NM(A.CO_CD) AS CO_NM
						, A.WH_CD
						, FN_CM05M01_CD_TO_NM(A.WH_CD) AS WH_NM
						, A.OWNER_CD
						, FN_CM05M01_CD_TO_NM(A.OWNER_CD) AS OWNER_NM
						, A.TYP_CD
						, FN_CM05M01_CD_TO_NM(A.TYP_CD)	AS TYP_NM
						, A.MAKR_CD
						, FN_CM05M01_CD_TO_NM(A.MAKR_CD) AS MAKR_NM
						, A.PRDT_CD
				     	, C.PRDT_NM
					    , A.IMP_YN
						, FN_CM05M01_CD_TO_NM(A.IMP_YN) AS IMP_NM
					    , A.CHG_CD
					    , FN_CM05M01_CD_TO_NM(A.CHG_CD) AS CHG_NM
					    , A.CHG_QTY
					    , A.STOCK_CHG_CD
					    , FN_CM05M01_CD_TO_NM(A.STOCK_CHG_CD) AS STOCK_CHG_NM
						, A.STOCK_UPR
						, A.STOCK_QTY
						, (nvl(A.STOCK_UPR,0) * nvl(A.STOCK_QTY,0)) as STOCK_AMT
						, A.STD_UPR
						, A.PCHS_UPR 
						, A.SELL_UPR 
						, E.CLNT_NM
						, TO_CHAR(A.PROC_DTTM, 'YYYY-MM-DD') AS PROC_DTTM 
				FROM TB_SM01H01 A, TB_BM01M01 C, TB_BM02M01 E
		WHERE  A.PRDT_CD = C.PRDT_CD 
				AND A.CLNT_CD = E.CLNT_CD(+)
				<if test="coCd != null and !coCd.equals('')">
						AND A.CO_CD = #{coCd}
						</if>
						<if test="whCd != null and !whCd.equals('')">
						 		AND A.WH_CD = #{whCd}
						 </if>
						 <if test="ownerCd != null and !ownerCd.equals('')">
								AND A.OWNER_CD = #{ownerCd}
						</if>
						<if test="typCd != null and !typCd.equals('')">
								AND A.TYP_CD = #{typCd}
						</if>
						<if test="makrCd != null and !makrCd.equals('')">
								AND A.MAKR_CD = #{makrCd}
						</if>
						<if test="prdtNm != null and !prdtNm.equals('')">
								AND C.PRDT_NM LIKE '%' || #{prdtNm} || '%'
						</if>
						<if test="clntNm != null and !clntNm.equals('')">
								AND E.CLNT_NM LIKE '%' || #{clntNm} || '%'
						</if>
				ORDER BY PROC_DTTM DESC, A.TRST_NO DESC, A.CLNT_CD,  A.TYP_CD, A.PRDT_CD
			)D
		)
		WHERE
			RNUM BETWEEN #{firstIndex} AND #{lastIndex} 
	</select>
	
	<select id="selectStockInfo" parameterType="Map" resultType="CamelMap">
		SELECT 
			  A.CO_CD
			, FN_CM05M01_CD_TO_NM(A.CO_CD) AS CO_NM
			, A.WH_CD
			, FN_CM05M01_CD_TO_NM(A.WH_CD) AS WH_NM
			, A.OWNER_CD
			, FN_CM05M01_CD_TO_NM(A.OWNER_CD) AS OWNER_NM
			, A.TYP_CD
			, FN_CM05M01_CD_TO_NM(A.TYP_CD) AS TYP_NM
			, A.MAKR_CD 
			, FN_CM05M01_CD_TO_NM(A.MAKR_CD) AS MAKR_NM
			, A.PRDT_CD
		    , C.PRDT_NM
			, A.IMP_YN
			, FN_CM05M01_CD_TO_NM(A.IMP_YN) AS IMP_NM
			, A.STOCK_CHG_CD
			, FN_CM05M01_CD_TO_NM(A.STOCK_CHG_CD) AS STOCK_CHG_NM
			, A.STOCK_AMT
			, A.STOCK_QTY
			, A.STOCK_UPR
			, A.STD_UPR
			, A.PCHS_UPR 
			, A.SELL_UPR 
			, E.CLNT_NM
			, TO_CHAR(A.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM 
		FROM TB_SM01M01 A, TB_BM01M01 C, TB_BM02M01 E
		WHERE  A.PRDT_CD   = C.PRDT_CD
		    AND A.CLNT_CD  = E.CLNT_CD(+)
			AND A.CO_CD    = #{coCd}
		 	AND A.WH_CD    = #{whCd}
			AND A.OWNER_CD = #{ownerCd}
			AND A.TYP_CD   = #{typCd}
			AND A.MAKR_CD  = #{makrCd}
			AND A.PRJCT_CD = #{prjctCd}
			AND A.IMP_YN   = #{impYn}
			AND C.PRDT_CD  = #{prdtCd}
			AND E.CLNT_CD  = #{clntCd}
		ORDER BY UDT_DTTM DESC
	</select>
	
	<update id="updateStockSell" parameterType="Map">
		MERGE INTO TB_SM01M01 A
			USING DUAL
			ON 
			(
					CO_CD    = #{coCd}
				AND WH_CD    = #{whCd}
				AND PRDT_CD  = #{prdtCd}
				AND OWNER_CD = #{ownerCd}
				AND CLNT_CD  = #{clntCd}
				AND TYP_CD   = #{typCd}
				AND MAKR_CD  = #{makrCd}
				AND PRJCT_CD = #{prjctCd}
				AND IMP_YN   = #{impYn}
			)
		WHEN MATCHED THEN
			UPDATE SET
				STOCK_QTY    = #{stockQty},
				SELL_UPR     = #{sellUpr},
				STOCK_CHG_CD = #{stockChgCd},
				UDT_ID       = #{userId},
				UDT_PGM      = #{pgmId},
				UDT_DTTM     = SYSDATE
		WHEN NOT MATCHED THEN
			INSERT
			(
				CO_CD,
		        WH_CD,
		        PRDT_CD,
		        OWNER_CD,
		        CLNT_CD,
		        TYP_CD,
		        MAKR_CD,
		        PRJCT_CD,
		        IMP_YN,
		        STOCK_QTY,
		        STOCK_UPR,
		        STD_UPR,
		        PCHS_UPR,
		        SELL_UPR,
		        STOCK_CHG_CD,
		        CREAT_ID,
		        CREAT_PGM,
		        CREAT_DTTM,
		        UDT_ID,
		        UDT_PGM,
		        UDT_DTTM
			)
			VALUES(
				#{coCd},
				#{whCd},
				#{prdtCd},
				#{ownerCd},
				#{clntCd},
				#{typCd},
				#{makrCd},
				#{prjctCd},
				#{impYn},
				#{stockQty},
				#{stockUpr},
				#{stdUpr},
				#{pchsUpr},
				#{sellUpr},
				#{stockChgCd},
				#{userId},
				#{pgmId},
				SYSDATE,
				#{userId},
				#{pgmId},
				SYSDATE
			)
	</update>
	
</mapper>