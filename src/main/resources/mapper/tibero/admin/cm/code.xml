<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.admin.cm.code.mapper.CodeMapper">

	<select id="selectCodeCount" resultType="int">
		SELECT
			COUNT(*)
		FROM 
			CMN_CODE_INFO 
		WHERE
			USE_YN = 'Y'
			AND CODE_ID != #{codeKind}
			<if test="searchValue != null and !searchValue.equals('')">
				AND ${searchType} LIKE '%${searchValue}%'
			</if>
		START WITH CODE_ID = #{codeKind}
		CONNECT BY PRIOR CODE_ID = CODE_KIND
		ORDER SIBLINGS BY CODE_ID
	</select>

	<select id="selectCodeList" resultType="CamelMap">
		SELECT 
			*
		FROM
		(
			SELECT
				ROWNUM AS RNUM, A.*
			FROM 
			(
				SELECT
					*
				FROM 
					CMN_CODE_INFO 
				WHERE
					USE_YN = 'Y'
					AND CODE_ID != #{codeKind}
					<if test="searchValue != null and !searchValue.equals('')">
						AND ${searchType} LIKE '%${searchValue}%'
					</if>
				START WITH CODE_ID = #{codeKind}
				CONNECT BY PRIOR CODE_ID = CODE_KIND
				ORDER SIBLINGS BY CODE_ID
			) A
		)
		WHERE
			RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>
	
	<select id="selectChildCodeList" resultType="CamelMap">
		SELECT
			*
		FROM
			CMN_CODE_INFO
		WHERE
			USE_YN = 'Y'
			AND CODE_KIND = #{codeKind}
	</select>
	
	<select id="selectCodeInfo" resultType="CamelMap">
		SELECT
			CODE_ID,
			CODE_NM,
			CODE_KIND,
			CODE_DESC
		FROM
			CMN_CODE_INFO
		WHERE
			CODE_ID = #{codeId}
	</select>
	
	<select id="selectCodeInfoList" parameterType="Map" resultType="CamelMap">
		SELECT
			CODE_ID, 
			CODE_NM, 
			CODE_KIND, 
			CODE_DESC, 
			USE_YN, 
			CREATE_ID, 
			CREATE_DT
		FROM
			CMN_CODE_INFO
		WHERE
			CODE_KIND = #{codeKind}
	</select>
	
	<select id="selectCodeTree" resultType="CamelMap">
		SELECT
			CODE_ID AS ID,
			CODE_NM AS TEXT,
			NVL2(CODE_KIND, CODE_KIND, '#') AS PARENT,
			'unit' AS TYPE
		FROM
			CMN_CODE_INFO
		WHERE
			USE_YN = 'Y'
	</select>

	<insert id="insertCode" parameterType="Map">
		MERGE INTO CMN_CODE_INFO A
			USING DUAL
			ON (A.CODE_ID = #{codeId})
		WHEN MATCHED THEN
			UPDATE SET
				CODE_NM = #{codeNm},
				CODE_KIND = #{codeKind},
				CODE_DESC = #{codeDesc},
				UPDATE_ID = #{userId},
				UPDATE_DT = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT
		(
			CODE_ID,
			CODE_NM,
			CODE_KIND,
			CODE_DESC,
			USE_YN,
			CREATE_ID,
			CREATE_DT,
			UPDATE_ID,
			UPDATE_DT
		)
		VALUES(
			#{codeId},
			#{codeNm},
			#{codeKind},
			#{codeDesc},
			'Y',
			#{userId},
			SYSDATE,
			#{userId},
			SYSDATE
		)		
	</insert>

	<update id="deleteCode" parameterType="Map">
		UPDATE
			CMN_CODE_INFO
		SET
			USE_YN = 'N',
			UPDATE_ID = #{userId},
			UPDATE_DT = SYSDATE
		WHERE
			CODE_ID = #{codeId}
	</update>

</mapper>